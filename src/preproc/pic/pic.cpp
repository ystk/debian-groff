#ifndef lint
static const char yysccsid[] = "@(#)yaccpar	1.9 (Berkeley) 02/21/93";
#endif

#include <stdlib.h>
#include <string.h>

#define YYBYACC 1
#define YYMAJOR 1
#define YYMINOR 9
#define YYPATCH 20081224

#define YYEMPTY        (-1)
#define yyclearin      (yychar = YYEMPTY)
#define yyerrok        (yyerrflag = 0)
#define YYRECOVERING() (yyerrflag != 0)

/* compatibility with bison */
#ifdef YYPARSE_PARAM
/* compatibility with FreeBSD */
#ifdef YYPARSE_PARAM_TYPE
#define YYPARSE_DECL() yyparse(YYPARSE_PARAM_TYPE YYPARSE_PARAM)
#else
#define YYPARSE_DECL() yyparse(void *YYPARSE_PARAM)
#endif
#else
#define YYPARSE_DECL() yyparse(void)
#endif /* YYPARSE_PARAM */

extern int YYPARSE_DECL();

static int yygrowstack(void);
#define YYPREFIX "yy"
#line 21 "pic.y"
#include "pic.h"
#include "ptable.h"
#include "object.h"

extern int delim_flag;
extern void copy_rest_thru(const char *, const char *);
extern void copy_file_thru(const char *, const char *, const char *);
extern void push_body(const char *);
extern void do_for(char *var, double from, double to,
		   int by_is_multiplicative, double by, char *body);
extern void do_lookahead();

/* Maximum number of characters produced by printf("%g") */
#define GDIGITS 14

int yylex();
void yyerror(const char *);

void reset(const char *nm);
void reset_all();

place *lookup_label(const char *);
void define_label(const char *label, const place *pl);

direction current_direction;
position current_position;

implement_ptable(place)

PTABLE(place) top_table;

PTABLE(place) *current_table = &top_table;
saved_state *current_saved_state = 0;

object_list olist;

const char *ordinal_postfix(int n);
const char *object_type_name(object_type type);
char *format_number(const char *form, double n);
char *do_sprintf(const char *form, const double *v, int nv);

#line 65 "pic.y"
typedef union {
	char *str;
	int n;
	double x;
	struct { double x, y; } pair;
	struct { double x; char *body; } if_data;
	struct { char *str; const char *filename; int lineno; } lstr;
	struct { double *v; int nv; int maxv; } dv;
	struct { double val; int is_multiplicative; } by;
	place pl;
	object *obj;
	corner crn;
	path *pth;
	object_spec *spec;
	saved_state *pstate;
	graphics_state state;
	object_type obtype;
} YYSTYPE;
#line 95 "pic.cpp"
#define LABEL 257
#define VARIABLE 258
#define NUMBER 259
#define TEXT 260
#define COMMAND_LINE 261
#define DELIMITED 262
#define ORDINAL 263
#define TH 264
#define LEFT_ARROW_HEAD 265
#define RIGHT_ARROW_HEAD 266
#define DOUBLE_ARROW_HEAD 267
#define LAST 268
#define BOX 269
#define CIRCLE 270
#define ELLIPSE 271
#define ARC 272
#define LINE 273
#define ARROW 274
#define MOVE 275
#define SPLINE 276
#define HEIGHT 277
#define RADIUS 278
#define FIGNAME 279
#define WIDTH 280
#define DIAMETER 281
#define UP 282
#define DOWN 283
#define RIGHT 284
#define LEFT 285
#define FROM 286
#define TO 287
#define AT 288
#define WITH 289
#define BY 290
#define THEN 291
#define SOLID 292
#define DOTTED 293
#define DASHED 294
#define CHOP 295
#define SAME 296
#define INVISIBLE 297
#define LJUST 298
#define RJUST 299
#define ABOVE 300
#define BELOW 301
#define OF 302
#define THE 303
#define WAY 304
#define BETWEEN 305
#define AND 306
#define HERE 307
#define DOT_N 308
#define DOT_E 309
#define DOT_W 310
#define DOT_S 311
#define DOT_NE 312
#define DOT_SE 313
#define DOT_NW 314
#define DOT_SW 315
#define DOT_C 316
#define DOT_START 317
#define DOT_END 318
#define DOT_X 319
#define DOT_Y 320
#define DOT_HT 321
#define DOT_WID 322
#define DOT_RAD 323
#define SIN 324
#define COS 325
#define ATAN2 326
#define LOG 327
#define EXP 328
#define SQRT 329
#define K_MAX 330
#define K_MIN 331
#define INT 332
#define RAND 333
#define SRAND 334
#define COPY 335
#define THRU 336
#define TOP 337
#define BOTTOM 338
#define UPPER 339
#define LOWER 340
#define SH 341
#define PRINT 342
#define CW 343
#define CCW 344
#define FOR 345
#define DO 346
#define IF 347
#define ELSE 348
#define ANDAND 349
#define OROR 350
#define NOTEQUAL 351
#define EQUALEQUAL 352
#define LESSEQUAL 353
#define GREATEREQUAL 354
#define LEFT_CORNER 355
#define RIGHT_CORNER 356
#define NORTH 357
#define SOUTH 358
#define EAST 359
#define WEST 360
#define CENTER 361
#define END 362
#define START 363
#define RESET 364
#define UNTIL 365
#define PLOT 366
#define THICKNESS 367
#define FILL 368
#define COLORED 369
#define OUTLINED 370
#define SHADED 371
#define XSLANTED 372
#define YSLANTED 373
#define ALIGNED 374
#define SPRINTF 375
#define COMMAND 376
#define DEFINE 377
#define UNDEF 378
#define YYERRCODE 256
static const short yylhs[] = {                           -1,
    0,    0,   16,   17,   17,   29,   29,   30,   30,   31,
   31,   31,   31,   31,   31,   31,   31,   31,   31,   32,
   31,   31,   33,   34,   31,   35,   36,   31,   37,   31,
   31,   38,   31,   31,   31,   23,   23,   39,   39,   39,
   27,   27,   28,   28,   28,   40,    7,   24,   24,    2,
    2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
    4,    4,    4,   15,   15,   15,   15,   41,   43,   15,
   15,   42,   42,   18,   18,   18,   18,   18,   18,   18,
   18,   18,   18,   18,   44,   18,   18,   18,   18,   18,
   18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
   18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
   18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
   18,   18,   18,   18,   18,   18,   18,   18,   18,   18,
   18,   18,   18,   18,   26,   26,   25,   25,   19,   19,
   19,    6,    6,    6,    6,    6,    6,    6,    6,    6,
    6,   45,   45,    5,    5,   13,   13,   13,   13,   13,
   14,   14,   14,   22,   22,   21,   21,    8,    8,   20,
   20,   20,   20,   20,   20,   20,   20,   20,   11,   11,
   12,   12,   12,   10,   10,   10,   10,   10,   10,    9,
    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
    9,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,
};
static const short yylen[] = {                            2,
    1,    1,    3,    1,    3,    0,    1,    1,    2,    3,
    3,    4,    1,    1,    1,    1,    1,    2,    2,    0,
    3,    2,    0,    0,    7,    0,    0,    6,    0,   10,
    1,    0,    4,    1,    1,    1,    1,    2,    2,    3,
    1,    2,    1,    1,    1,    0,    5,    0,    2,    1,
    1,    3,    3,    3,    3,    3,    3,    3,    3,    2,
    0,    2,    3,    1,    4,    4,    4,    0,    0,    6,
    1,    0,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    2,    3,    0,    4,    3,    3,    3,    3,
    2,    2,    3,    2,    3,    2,    3,    2,    3,    3,
    3,    3,    3,    3,    3,    2,    2,    2,    3,    2,
    3,    2,    3,    3,    3,    3,    3,    3,    2,    3,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    3,    2,    1,    5,    0,    3,    1,    1,
    3,    1,    3,    5,    3,    5,    5,    5,    7,    6,
    8,    1,    4,    3,    3,    1,    2,    2,    3,    1,
    1,    1,    3,    1,    3,    1,    2,    2,    2,    1,
    1,    1,    1,    1,    1,    1,    2,    1,    2,    3,
    1,    1,    2,    1,    5,    4,    3,    3,    2,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    2,    2,    2,    2,    1,    1,
    2,    2,    2,    2,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    2,    2,    2,    2,    2,    3,    3,
    3,    3,    3,    3,    2,    3,    4,    4,    6,    4,
    4,    4,    6,    6,    4,    4,    3,    4,    3,    3,
    3,    3,    3,    3,    3,    3,    2,
};
static const short yydefred[] = {                         0,
    8,    0,    2,    0,    0,    0,    0,  135,   17,   74,
   75,   76,   77,   78,   79,   80,   81,    0,   13,   14,
   16,   15,    0,   20,    0,    0,    0,    0,    0,    0,
    0,   85,   68,    0,    4,    0,    0,   82,   71,    0,
    9,    0,    0,    0,    0,    0,   26,    0,  161,  222,
  223,  164,  166,  204,  203,  160,  190,  191,  192,  193,
  194,  195,  196,  197,  198,  199,  200,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  201,  202,
    0,    0,  209,  210,  215,  216,  217,  218,  219,  221,
  220,    0,    0,    0,    0,    0,  142,  139,  162,    0,
    0,    0,    0,    0,    0,   44,    0,   41,    0,    0,
    0,    0,    0,    0,    0,    0,   38,    0,    0,    0,
    0,    0,   32,    3,    0,  123,  124,  125,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  106,  107,    0,    0,    0,  121,  122,  129,  130,
  131,  132,  126,  127,    0,    0,    0,    0,    0,    0,
    0,  134,    0,  128,   39,    0,    0,   11,    0,   37,
   36,   10,   23,    0,   21,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  207,  205,  211,  213,
  208,  206,  212,  214,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  152,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  224,  225,  226,  227,  228,    0,  157,    0,
    0,  178,  170,  171,  172,  173,  174,  175,  176,    0,
  169,  167,  168,   42,    0,    0,   60,    0,    0,    0,
   46,    0,    0,    0,    0,   84,  137,    0,    0,    0,
    0,    5,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  103,    0,  184,    0,    0,    0,  105,    0,    0,    0,
    0,    0,  117,  118,  116,    0,    0,   40,    0,    0,
    0,    0,    0,    0,   65,    0,   12,    0,   27,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  247,    0,
    0,    0,    0,  236,  155,  141,    0,    0,    0,  165,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  163,
  143,  145,  177,    0,    0,   56,    0,    0,    0,    0,
    0,   54,    0,    0,   53,   52,    0,   86,   69,   33,
  181,  189,    0,    0,    0,  179,    0,    0,  183,    0,
    0,   24,    0,  237,  238,    0,  240,  241,  242,    0,
    0,  245,  246,  248,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   47,    0,  136,    0,    0,  188,  187,
    0,  180,    0,    0,   28,    0,    0,    0,    0,    0,
  147,  144,  146,  153,    0,    0,    0,    0,   73,   70,
  186,    0,   25,   49,  239,  243,  244,    0,    0,  150,
    0,    0,  185,    0,  149,    0,    0,   29,  151,    0,
    0,   30,
};
static const short yydgoto[] = {                          2,
  112,  196,  114,  442,   97,   98,   34,   99,  100,  281,
  282,  283,  115,  102,   35,    3,   36,   37,  103,  241,
  104,  105,  172,  415,  367,  116,  107,  108,  259,    5,
   39,   48,  308,  413,  174,  383,  451,  261,   40,  360,
  122,  430,  407,  121,  220,
};
static const short yysindex[] = {                       -49,
    0,    0,    0, 5473,  -26,  -10,  -15,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    5,    0,    0,
    0,    0, -238,    0,13272, -185,13356, -178,13858,   45,
13272,    0,    0, -255,    0,  -49,12851,    0,    0,  -36,
    0,  -49,13356,   72, -231, -198,    0, -107,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  119,  123,  128,
  139,  162,  164,  174,  175,  178,  179,  181,    0,    0,
 -266, -233,    0,    0,    0,    0,    0,    0,    0,    0,
    0,13521,13356,13858,13858, 1079,    0,    0,    0,  -17,
  186,  454,   98,  997,  874,    0,13272,    0,  183,13356,
13356, 1218,  -56, -288,  186, -234,    0,  -22,  -18,13272,
  -49,  -49,    0,    0, 5011,    0,    0,    0,13858,13858,
13858,13858,14111,14111,14111,14111,13942,13942,13942,13689,
14027,    0,    0,14111,14111,14111,    0,    0,    0,    0,
    0,    0,    0,    0,13858,14111, -243, -243, -243,13858,
13858,    0, 1664,    0,    0,   -6,12604,    0,13356,    0,
    0,    0,    0,  -14,    0,13356,13356,13356,13356,13356,
13356,13356,13356,13356,12970,13356,    0,    0,    0,    0,
    0,    0,    0,    0, 1543,  217,  228,  -39,   84,    6,
  192,  192,  -16,    0,13858,13858,13858,13858,13858,13858,
13858,13942,13858,13858,13858,13858,13858,13858,13858,13942,
    4,  245,    0,    0,    0,    0,    0,   48,    0,14027,
14027,    0,    0,    0,    0,    0,    0,    0,    0,  214,
    0,    0,    0,    0,13858,  192,    0,13356,13356,13858,
    0,13356,13356, -243, -243,    0,    0,  226, 5473,  185,
   63,    0, 1664, 1664, 1664, 1664, 1664, 1664, 1664, 1664,
 1079,   98,   98,   98, 2203,  820,  820,   69,13153,  -17,
    0,  465,    0,   98,13605,  -13,    0, 1664, 1664, 1664,
 1664, 1664,    0,    0,    0, 1664, 1664,    0,  -10,  -15,
    0,    0,    0,  186,    0,   98,    0,   73,    0,  293,
  302,  300,  305,  306,  313,  317,  319,  316,    0,  323,
  330,13942,13942,    0,    0,    0,13942,14027,14027,    0,
   70, 2125, 1688,  107,  107,   54,   54, 1664,  194,  234,
   54,  109,  109,  192,  192,  192,  192,  -38,  245,    0,
    0,    0,    0,  394, 2125,    0, 2114,   26,   54,  126,
 2125,    0, 2114,   26,    0,    0,   34,    0,    0,    0,
    0,    0,  997,  870,  870,    0,  337,  129,    0,  325,
  228,    0,   27,    0,    0,13356,    0,    0,    0,13356,
13356,    0,    0,    0,  272,  -32,  121,  350,  368,  108,
13942,13942,13858,    0,13858,    0, 5473,  870,    0,    0,
  870,    0,   27,  152,    0,  374,  377,  381,13942,13942,
    0,    0,    0,    0,   -8,   98, 1652, 1664,    0,    0,
    0,  388,    0,    0,    0,    0,    0,   14,  221,    0,
13774,   87,    0,  389,    0,13858, 1664,    0,    0, 1664,
  188,    0,
};
static const short yyrindex[] = {                       320,
    0,    0,    0,  440,  210,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  259,    0,    0,
    0,    0,    0,  289,    0,   83,  324,    0,    0,  365,
    0,12714,    0,    0,    0,  373,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,10957,    0,    0,    0,    0,
 4751,10318,11167,    0,    0,    0,  597,    0,    0,    0,
    0,  587,    0, 1560,    0,    0,    0,12201,    0,  626,
 5937, 5937,    0,    0,  124,    0,    0,    0,    0,    0,
    0,    0,11428,11546,11096,11278,    0,    0,    0,    0,
    0,    0,    0,11680,11804,11932,    0,    0,    0,    0,
    0,    0,    0,    0,    0,12056,    0,    0,    0,    0,
    0,    0, 5334,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  407,    0,  278,  383,    0,    0,
  575,  694,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 3359,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,12555,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 5679, 5798, 6143, 6262, 6607, 6726, 7071, 7190,
    0, 7535, 7654, 7999,10437, -205,  191,    0,    0, 9973,
    0,10742,    0, 8118,    0,    0,    0, 8463, 8582, 8927,
 9046, 9391,    0,    0,    0, 9510, 9855,    0,12268, 2007,
 2510, 2872,  659,  664,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 4287, 4406, 3478, 3823, 2431, 2550, 5215,10820,    0,
 2895, 1967, 2086, 1039, 1158, 1503, 1622,    0, 3942,    0,
    0,    0,    0,    0,    9,    0,  349,  366, 3014,    0,
    1,    0,  379, 3448,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  407,
    0,    0,  633,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  401,  419,    0,
    0,    0,    0,    0,    0,    0, 1015,    0,    0,    0,
    0,    0,  633,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0, 4870,  111,   43,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  411,    0,
    0,    0,    0,  432,    0,    0,  141,    0,    0,  151,
    0,    0,
};
static const short yygindex[] = {                         0,
  -25,  220,  -19,    0,  -53,  298,    0,    0,  -66,    0,
    0, -118,   33,  -84, -111,   90,    0,    0,10234, -102,
    0,    0,    0,   88,    0,   40,  471,  -79,  103,  467,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  315,
};
#define YYTABLESIZE 14474
static const short yytable[] = {                         96,
   55,  326,  243,  118,  230,   96,  231,  166,  255,    1,
  230,  163,  231,  262,  218,  222,    8,  187,  188,  216,
  214,   46,  215,  218,  217,  170,  171,  244,  216,  214,
  211,  215,   41,  217,  230,  229,  231,  250,  197,  213,
  244,   55,   44,   38,   55,   43,  250,   42,  213,  255,
  191,  192,  255,  440,  164,  305,  230,  101,  231,   55,
  252,  253,  164,  101,  106,   45,  195,  255,  201,  202,
  106,  219,  109,  280,  406,  444,  164,  405,   93,  117,
  219,   96,    6,  138,  119,  246,  138,  287,  189,  190,
  218,  247,  123,   55,   96,  216,  214,   47,  215,   93,
  217,  255,    4,  263,  264,  265,  266,  267,  268,  269,
  270,  271,  271,  271,  271,  286,  254,  255,  288,  289,
  290,  193,  194,    7,  198,   55,  328,  327,  329,  291,
  292,   30,  169,  255,  296,  297,  349,  173,  124,  101,
  230,  271,  231,  218,  167,  218,  106,  219,  216,  214,
  216,  215,  101,  217,  175,  217,  372,  256,  176,  106,
  377,  421,  177,  230,   38,  231,  250,  178,  213,  101,
  101,  101,  101,  374,  375,    6,  351,  352,  179,  332,
  333,  334,  335,  336,  337,  338,  339,  341,  342,  343,
  344,  345,  346,  347,  271,  222,  293,  294,  295,  304,
  219,  180,  219,  181,  286,  286,   38,    6,  371,    7,
  258,  260,  280,  182,  183,  379,    7,  184,  185,  354,
  186,  165,  355,  357,  359,  197,  361,  363,  356,  358,
  218,  381,  362,  364,  251,  216,  214,    8,  215,   49,
  217,  257,    7,  245,  101,   52,  113,  309,    7,    7,
   53,  298,  101,  195,    7,  409,  410,  324,   35,  380,
   49,  445,  168,  230,   55,  231,   52,  402,  325,  330,
  408,   53,  255,  420,  398,  399,  230,  401,  231,  223,
  224,  225,  226,  227,  221,  219,  331,  219,   31,  431,
  228,   55,  432,  365,  366,  429,  339,  271,   38,  255,
    7,  271,  286,  286,  350,    7,  353,  371,  371,  369,
  255,  198,  200,  255,  230,  419,  231,   35,  368,    6,
  142,  142,  142,   64,  370,  376,  205,  206,  207,  208,
  209,  210,    7,  384,  382,  205,  206,  207,  208,  209,
  210,  371,  385,  386,  371,  387,  388,   31,  256,   55,
   55,   35,   30,  389,  101,  101,  392,  255,  255,  101,
  390,  218,  391,  393,   34,   59,  216,  214,  211,  215,
  394,  217,   22,  400,  252,  271,  271,  427,   58,  428,
  411,   31,   64,   35,  250,  412,  213,  404,  307,  256,
  422,  414,  256,  271,  271,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  320,  321,   59,  256,  423,   59,
    6,  434,  424,   31,  435,  447,   64,  436,  219,   58,
  450,  437,   58,   34,   59,  140,  140,  140,  443,  449,
  218,   22,  448,  101,  101,  216,  214,   58,  215,    1,
  217,  256,    6,  143,  143,  143,   38,   50,   64,  452,
  166,  101,  101,  250,  148,  213,   61,   34,   59,  209,
  210,  145,  145,  145,  303,   22,    7,    7,    7,    7,
    7,   58,    7,  256,  150,  150,  150,    7,    7,    7,
    7,    7,    7,    7,    7,    7,   62,  219,    7,   34,
   59,    7,    7,    7,    7,  203,   63,   22,  204,  228,
  433,  120,  125,   58,  223,  224,  225,  226,  227,  323,
  378,    0,    0,    0,    0,    0,    7,    7,    7,    7,
    7,    7,    7,    7,    7,    7,    7,    7,    0,    0,
    0,    0,    0,    7,    7,    7,    7,    7,    7,    7,
    7,    7,    7,    7,    7,    0,    7,    7,    7,    7,
    7,    7,    0,    0,    7,    0,    7,    0,    0,    0,
    0,    0,    0,    0,    7,    7,    7,    7,    7,    7,
    7,    7,    7,    7,  235,    7,    6,    6,    0,    6,
    6,    0,    0,    0,    7,    7,   50,    0,    6,    6,
    6,    6,    6,    6,    6,    6,   19,    0,    6,    0,
    0,    6,    6,    6,    6,  416,    0,  235,    0,  417,
  418,  235,  256,    0,  235,  235,  235,  235,  235,  235,
    0,  235,    0,    0,    0,   18,    0,   50,    0,   59,
   50,    0,   48,  235,  235,    0,  235,    0,    0,  256,
    0,    0,   58,    0,    0,   50,    0,    0,    0,    0,
  256,    0,    0,  256,    6,   19,   59,    0,   66,    0,
    6,    6,    0,   67,    6,    0,    6,  235,    0,   58,
  235,    0,    0,  248,  249,  207,  208,  209,  210,   50,
  403,    0,    0,    6,   18,    6,    0,    0,    0,   19,
    0,   48,    0,  257,    6,    6,    0,    0,  256,  235,
    0,  139,    0,  139,    0,    0,  140,    0,  140,    0,
    0,   50,    0,    0,    0,   59,    0,   66,   18,    0,
    0,   19,   67,    0,    0,   48,  257,    0,   58,    0,
  257,    0,    0,  257,  257,  257,  257,  257,  257,    0,
  257,    0,  205,  206,  207,  208,  209,  210,   54,   55,
   18,   66,  257,  257,    0,  257,   67,   48,    0,    0,
    0,   57,   58,   59,   60,   61,   62,   63,   64,   65,
   66,   67,   57,   58,   59,   60,   61,   62,   63,   64,
   65,   66,   67,   66,    0,    0,  257,    0,   67,  257,
   79,   80,   81,   82,    0,    0,    0,    0,    0,    0,
    0,   79,   80,   81,   82,    0,    0,    0,   83,   84,
   85,   86,   87,   88,   89,   90,   91,    0,  257,   83,
   84,   85,   86,   87,   88,   89,   90,   91,    0,    0,
    0,  235,  235,  235,  235,    0,    0,  235,  235,  235,
  235,  235,  235,    0,    0,    0,    0,    0,    0,    0,
   50,  235,  235,    0,  235,  235,  235,  235,  235,  235,
  235,  235,  235,  235,  235,  235,  235,  235,  235,  235,
  235,  235,  235,  235,  235,  235,  235,   50,    0,  235,
  235,  235,  235,  235,  235,  235,  235,  235,  235,  235,
  235,  235,  235,    0,    0,    0,    0,    0,  235,  235,
  235,  235,  235,  235,  235,  235,  235,  235,  235,    0,
  240,  235,  235,  235,  235,  278,    0,  235,  235,    0,
  235,    0,    0,  235,  235,  235,  235,  235,  235,  235,
  235,  235,  235,  235,  235,  235,  235,  235,    0,    0,
    0,  235,  235,  235,  235,  235,  235,  235,  235,  235,
  257,  257,  257,  257,    0,    0,  257,  257,  257,  257,
  257,  257,    0,    0,  240,    0,    0,    0,    0,    0,
  257,  257,    0,  257,  257,  257,  257,  257,  257,  257,
  257,  257,  257,  257,  257,  257,  257,  257,  257,  257,
  257,  257,  257,  257,  257,  257,    0,    0,  257,  257,
  257,  257,  257,  257,  257,  257,  257,  257,  257,  257,
  257,  257,    0,    0,   72,    0,    0,  257,  257,  257,
  257,  257,  257,  257,  257,  257,  257,  257,    0,    0,
  257,  257,  257,  257,    0,    0,  257,  257,  231,  257,
    0,    0,  257,  257,  257,  257,  257,  257,  257,  257,
  257,  257,  257,  257,  257,  257,  257,    0,    0,    0,
  257,  257,  257,  257,  257,  257,  257,  257,  257,    0,
    0,  231,    0,   72,    0,  231,    0,    0,  231,  231,
  231,  231,  231,  231,    0,  231,    0,  240,  233,  234,
  235,  236,  237,  238,    0,  239,    0,  231,  231,    0,
  231,    0,    0,    0,    0,    0,    0,   72,    0,    0,
    0,    0,    0,    0,    0,  218,    0,    0,    0,    0,
  216,  214,  211,  215,    0,  217,    0,    0,    0,    0,
    0,  231,    0,  232,  231,    0,    0,    0,  212,   72,
  213,  242,  233,  234,  235,  236,  237,  238,    0,  239,
    0,    0,    0,   54,   55,    0,    0,  232,    0,    0,
    0,    0,    0,  231,    0,    0,    0,    0,    0,    0,
    0,    0,  219,    0,    0,    0,    0,   57,   58,   59,
   60,   61,   62,   63,   64,   65,   66,   67,    0,    0,
  232,    0,    0,    0,  232,    0,    0,  232,  232,  232,
  232,  232,  232,    0,  232,    0,   79,   80,   81,   82,
    0,    0,    0,    0,    0,    0,  232,  232,    0,  232,
    0,    0,    0,    0,   83,   84,   85,   86,   87,   88,
   89,   90,   91,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  232,    0,    0,  232,  218,    0,  232,    0,    0,  216,
  214,    0,  215,    0,  217,  233,  234,  235,  236,  237,
  238,    0,  239,    0,    0,    0,    0,  250,    0,  213,
    0,    0,  232,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  231,  231,  231,  231,    0,
    0,  231,  231,  231,  231,  231,  231,    0,    0,    0,
    0,  219,    0,    0,    0,  231,  231,    0,  231,  231,
  231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
  231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
  231,    0,    0,  231,  231,  231,  231,  231,  231,  231,
  231,  231,  231,  231,  231,  231,  231,    0,    0,    0,
    0,    0,  231,  231,  231,  231,  231,  231,  231,  231,
  231,  231,  231,    0,    0,  231,  231,  231,  231,    0,
  203,  231,  231,  204,  231,    0,    0,  231,  231,  231,
  231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
  231,  231,    0,    0,    0,  231,  231,  231,  231,  231,
  231,  231,  231,  231,  232,  232,  232,  232,    0,    0,
  232,  232,  232,  232,  232,  232,    0,  205,  206,  207,
  208,  209,  210,    0,  232,  232,    0,  232,  232,  232,
  232,  232,  232,  232,  232,  232,  232,  232,  232,  232,
  232,  232,  232,  232,  232,  232,  232,  232,  232,  232,
    0,    0,  232,  232,  232,  232,  232,  232,  232,  232,
  232,  232,  232,  232,  232,  232,    0,    0,    0,    0,
    0,  232,  232,  232,  232,  232,  232,  232,  232,  232,
  232,  232,    0,    0,  232,  232,  232,  232,    0,    0,
  232,  232,  233,  232,    0,    0,  232,  232,  232,  232,
  232,  232,  232,  232,  232,  232,  232,  232,  232,  232,
  232,    0,    0,    0,  232,  232,  232,  232,  232,  232,
  232,  232,  232,    0,    0,  233,    0,    0,    0,  233,
    0,    0,  233,  233,  233,  233,  233,  233,    0,  233,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   51,
    0,  233,  233,    0,  233,    0,  248,  249,  207,  208,
  209,  210,    0,    0,    0,    0,    0,    0,    0,  218,
    0,    0,    0,    0,  216,  214,  211,  215,    0,  217,
    0,    0,    0,    0,    0,  233,    0,    0,  233,    0,
   51,    0,  322,   51,  213,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   51,    0,
    0,  234,    0,    0,    0,    0,    0,  233,    0,    0,
    0,    0,    0,    0,    0,    0,  219,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   51,    0,  234,    0,    0,    0,  234,    0,
    0,  234,  234,  234,  234,  234,  234,    0,  234,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  234,  234,    0,  234,   51,    0,    0,    0,  218,    0,
    0,    0,    0,  216,  214,    0,  215,    0,  217,    0,
  218,    0,    0,    0,    0,  216,  214,    0,  215,    0,
  217,  250,    0,  213,  234,    0,    0,  234,    0,    0,
    0,    0,    0,  250,  218,  213,    0,    0,    0,  216,
  214,    0,  215,    0,  217,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  219,  234,  250,    0,  213,
    0,    0,    0,    0,    0,    0,    0,  219,    0,  233,
  233,  233,  233,    0,    0,  233,  233,  233,  233,  233,
  233,    0,    0,    0,    0,    0,    0,    0,    0,  233,
  233,  219,  233,  233,  233,  233,  233,  233,  233,  233,
  233,  233,  233,  233,  233,  233,  233,  233,  233,  233,
  233,  233,  233,  233,  233,    0,    0,  233,  233,  233,
  233,  233,  233,  233,  233,  233,  233,  233,  233,  233,
  233,    0,    0,   51,    0,    0,  233,  233,  233,  233,
  233,  233,  233,  233,  233,  233,  233,    0,    0,  233,
  233,  233,  233,    0,  203,  233,  233,  204,  233,    0,
   51,  233,  233,  233,  233,  233,  233,  233,  233,  233,
  233,  233,  233,  233,  233,  233,    0,    0,    0,  233,
  233,  233,  233,  233,  233,  233,  233,  233,  234,  234,
  234,  234,    0,    0,  234,  234,  234,  234,  234,  234,
    0,  248,  249,  207,  208,  209,  210,    0,  234,  234,
    0,  234,  234,  234,  234,  234,  234,  234,  234,  234,
  234,  234,  234,  234,  234,  234,  234,  234,  234,  234,
  234,  234,  234,  234,    0,    0,  234,  234,  234,  234,
  234,  234,  234,  234,  234,  234,  234,  234,  234,  234,
    0,  441,    0,    0,    0,  234,  234,  234,  234,  234,
  234,  234,  234,  234,  234,  234,    0,    0,  234,  234,
  234,  234,    0,    0,  234,  234,  229,  234,    0,    0,
  234,  234,  234,  234,  234,  234,  234,  234,  234,  234,
  234,  234,  234,  234,  234,    0,    0,    0,  234,  234,
  234,  234,  234,  234,  234,  234,  234,    0,    0,  229,
  205,  206,  207,  208,  209,  210,  229,  229,    0,  229,
  229,  229,  205,  206,  207,  208,  209,  210,    0,    0,
    0,    0,    0,    0,    0,  229,  229,    0,  229,    0,
    0,    0,    0,    0,    0,    0,  205,    0,  207,  208,
  209,  210,    0,  222,    0,    0,    0,    0,  222,  222,
  222,  222,    0,  222,    0,    0,    0,    0,    0,  229,
    0,    0,  229,    0,    0,    0,  222,    0,  222,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  230,    0,    0,    0,    0,
    0,  229,    0,    0,    0,    0,    0,    0,    0,    0,
  222,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  230,    0,
    0,    0,    0,    0,    0,  230,  230,    0,  230,  230,
  230,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  230,  230,    0,  230,    0,    0,
  218,    0,    0,    0,    0,  216,  214,    0,  215,    0,
  217,  218,    0,    0,    0,    0,  216,  214,    0,  215,
    0,  217,    0,  250,    0,  213,    0,    0,  230,    0,
    0,  230,    0,    0,  250,    0,  213,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  219,    0,    0,
  230,    0,    0,    0,    0,    0,    0,    0,  219,    0,
    0,    0,    0,  229,  229,  229,  229,    0,    0,  229,
  229,  229,  229,  229,  229,    0,    0,    0,    0,    0,
    0,    0,    0,  229,  229,    0,  229,  229,  229,  229,
  229,  229,  229,  229,  229,  229,  229,  229,  229,  229,
  229,  229,  229,  229,  229,  229,  229,  229,  229,    0,
    0,  229,  229,  229,  229,  229,  229,  229,  229,  229,
  229,  229,  229,  229,  229,    0,    0,    0,    0,    0,
  229,  229,  229,  229,  229,  229,  229,  229,  229,  229,
  229,    0,    0,  229,  229,  229,  229,    0,  222,  229,
  229,  222,  229,    0,    0,  229,  229,  229,  229,  229,
  229,  229,  229,  229,  229,  229,  229,  229,  229,  229,
    0,    0,    0,  229,  229,  229,  229,  229,  229,  229,
  229,  229,  230,  230,  230,  230,    0,    0,  230,  230,
  230,  230,  230,  230,    0,  222,  222,  222,  222,  222,
  222,    0,  230,  230,    0,  230,  230,  230,  230,  230,
  230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
  230,  230,  230,  230,  230,  230,  230,  230,    0,    0,
  230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
  230,  230,  230,  230,    0,    0,    0,    0,    0,  230,
  230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
    0,    0,  230,  230,  230,  230,    0,    0,  230,  230,
  250,  230,    0,    0,  230,  230,  230,  230,  230,  230,
  230,  230,  230,  230,  230,  230,  230,  230,  230,    0,
    0,    0,  230,  230,  230,  230,  230,  230,  230,  230,
  230,    0,  248,  250,  207,  208,  209,  210,    0,    0,
  250,  250,    0,    0,  250,  207,  208,  209,  210,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,
  250,    0,  250,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   16,
   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,
   67,    0,    0,  250,    0,    0,  250,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   79,
   80,   81,   82,    0,    0,    0,    0,    0,    0,  252,
    0,    0,    0,    0,    0,  250,    0,   83,   84,   85,
   86,   87,   88,   89,   90,   91,    0,    0,   16,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  252,    0,    0,    0,    0,    0,    0,  252,
  252,    0,    0,  252,    0,    0,    0,    0,    0,    0,
    0,    0,   16,    0,    0,  204,    0,    0,  252,  252,
    0,  252,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   16,    0,    0,    0,    0,    0,
    0,    0,  252,    0,    0,  252,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  252,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  250,  250,  250,
  250,    0,    0,  250,  250,  250,  250,  250,  250,    0,
    0,    0,    0,    0,    0,    0,    0,  250,  250,    0,
  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,
  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,
  250,  250,  250,    0,    0,  250,  250,  250,  250,  250,
  250,  250,  250,  250,  250,  250,  250,  250,  250,    0,
    0,    0,    0,    0,  250,  250,  250,  250,  250,  250,
  250,  250,  250,  250,  250,    0,  204,  250,  250,  250,
  250,    0,  204,  250,  250,    0,  250,  204,    0,  250,
  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,
  250,  250,  250,  250,    0,    0,    0,  250,  250,  250,
  250,  250,  250,  250,  250,  250,  252,  252,  252,  252,
    0,  204,  252,  252,  252,  252,  252,  252,    0,    0,
    0,    0,    0,    0,    0,    0,  252,  252,    0,  252,
  252,  252,  252,  252,  252,  252,  252,  252,  252,  252,
  252,  252,  252,  252,  252,  252,  252,  252,  252,  252,
  252,  252,    0,    0,  252,  252,  252,  252,  252,  252,
  252,  252,  252,  252,  252,  252,  252,  252,    0,    0,
    0,   15,    0,  252,  252,  252,  252,  252,  252,  252,
  252,  252,  252,  252,    0,    0,  252,  252,  252,  252,
    0,    0,  252,  252,  251,  252,    0,    0,  252,  252,
  252,  252,  252,  252,  252,  252,  252,  252,  252,  252,
  252,  252,  252,    0,    0,    0,  252,  252,  252,  252,
  252,  252,  252,  252,  252,    0,    0,  251,    0,    0,
   15,    0,    0,    0,  251,  251,    0,    0,  251,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  251,  251,    0,  251,    0,    0,    0,
    0,    0,    0,    0,   15,    0,    0,  203,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  251,    0,    0,
  251,    0,    0,    0,    0,    0,   15,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  249,    0,    0,    0,    0,    0,  251,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  249,    0,    0,    0,
    0,    0,    0,  249,  249,    0,    0,  249,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  249,  249,    0,  249,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  249,    0,    0,  249,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  203,    0,
    0,    0,    0,    0,  203,    0,    0,    0,  249,  203,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  251,  251,  251,  251,    0,    0,  251,  251,  251,
  251,  251,  251,    0,    0,    0,    0,    0,    0,    0,
    0,  251,  251,  203,  251,  251,  251,  251,  251,  251,
  251,  251,  251,  251,  251,  251,  251,  251,  251,  251,
  251,  251,  251,  251,  251,  251,  251,    0,    0,  251,
  251,  251,  251,  251,  251,  251,  251,  251,  251,  251,
  251,  251,  251,    0,    0,    0,    0,    0,  251,  251,
  251,  251,  251,  251,  251,  251,  251,  251,  251,    0,
    0,  251,  251,  251,  251,    0,    0,  251,  251,    0,
  251,    0,    0,  251,  251,  251,  251,  251,  251,  251,
  251,  251,  251,  251,  251,  251,  251,  251,    0,    0,
    0,  251,  251,  251,  251,  251,  251,  251,  251,  251,
  249,  249,  249,  249,    0,    0,  249,  249,  249,  249,
  249,  249,    0,    0,    0,    0,    0,    0,    0,    0,
  249,  249,    0,  249,  249,  249,  249,  249,  249,  249,
  249,  249,  249,  249,  249,  249,  249,  249,  249,  249,
  249,  249,  249,  249,  249,  249,    0,    0,  249,  249,
  249,  249,  249,  249,  249,  249,  249,  249,  249,  249,
  249,  249,    0,    0,    0,    0,    0,  249,  249,  249,
  249,  249,  249,  249,  249,  249,  249,  249,    0,    0,
  249,  249,  249,  249,    0,    0,  249,  249,  158,  249,
    0,    0,  249,  249,  249,  249,  249,  249,  249,  249,
  249,  249,  249,  249,  249,  249,  249,    0,    0,    0,
  249,  249,  249,  249,  249,  249,  249,  249,  249,    0,
    0,  158,    0,    0,    0,    0,    0,    0,  158,  158,
    0,  158,  158,  158,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  158,    0,    0,
  158,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   57,    0,    0,
    0,  158,    0,    0,  158,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  254,    0,    0,
    0,    0,    0,  158,    0,    0,    0,    0,   57,    0,
    0,   57,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   57,    0,    0,    0,
  254,    0,    0,    0,    0,    0,    0,  254,  254,    0,
    0,  254,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  254,    0,    0,    0,
   57,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  254,    0,   57,  254,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  254,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  158,  158,  158,  158,    0,
    0,  158,    0,  158,  158,  158,  158,    0,    0,    0,
    0,    0,    0,    0,    0,  158,  158,    0,  158,  158,
  158,  158,  158,  158,  158,  158,  158,  158,  158,  158,
  158,  158,  158,  158,  158,  158,  158,  158,  158,  158,
    0,    0,    0,    0,  158,  158,  158,  158,  158,  158,
  158,  158,  158,  158,  158,  158,  158,  158,  158,  158,
  158,  158,  158,  158,  158,  158,  158,  158,  158,  158,
  158,  158,  158,    0,    0,  158,  158,  158,  158,    0,
    0,  158,  158,    0,    0,    0,    0,    0,    0,    0,
    0,   57,    0,  158,  158,  158,  158,  158,  158,  158,
  158,  158,    0,    0,    0,  158,  158,  158,  158,  158,
  158,  158,  158,  158,  254,  254,  254,  254,   57,    0,
  254,  254,  254,  254,  254,  254,    0,    0,    0,    0,
    0,    0,    0,    0,  254,  254,    0,  254,  254,  254,
  254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
  254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
    0,    0,  254,  254,  254,  254,  254,  254,  254,  254,
  254,  254,  254,  254,  254,  254,    0,   57,    0,    0,
    0,  254,  254,  254,  254,  254,  254,  254,  254,  254,
  254,  254,    0,    0,  254,  254,  254,  254,    0,    0,
  254,  254,  253,  254,    0,    0,  254,  254,  254,  254,
    0,    0,  254,  254,  254,  254,  254,  254,  254,  254,
  254,    0,    0,    0,  254,  254,  254,  254,  254,  254,
  254,  254,  254,    0,    0,  253,    0,    0,    0,    0,
    0,    0,  253,  253,    0,    0,  253,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  253,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  253,    0,    0,  253,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  159,    0,    0,    0,    0,    0,  253,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  159,    0,    0,    0,    0,    0,
    0,  159,  159,    0,  159,  159,  159,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  159,    0,    0,  159,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  159,    0,    0,  159,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  159,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  253,
  253,  253,  253,    0,    0,  253,  253,  253,  253,  253,
  253,    0,    0,    0,    0,    0,    0,    0,    0,  253,
  253,    0,  253,  253,  253,  253,  253,  253,  253,  253,
  253,  253,  253,  253,  253,  253,  253,  253,  253,  253,
  253,  253,  253,  253,  253,    0,    0,  253,  253,  253,
  253,  253,  253,  253,  253,  253,  253,  253,  253,  253,
  253,    0,    0,    0,    0,    0,  253,  253,  253,  253,
  253,  253,  253,  253,  253,  253,  253,    0,    0,  253,
  253,  253,  253,    0,    0,  253,  253,    0,  253,    0,
    0,  253,  253,  253,  253,    0,    0,  253,  253,  253,
  253,  253,  253,  253,  253,  253,    0,    0,    0,  253,
  253,  253,  253,  253,  253,  253,  253,  253,  159,  159,
  159,  159,    0,    0,  159,    0,  159,  159,  159,  159,
    0,    0,    0,    0,    0,    0,    0,    0,  159,  159,
    0,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,    0,    0,    0,    0,  159,  159,  159,
  159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
  159,  159,  159,  159,  159,  159,    0,    0,  159,  159,
  159,  159,    0,    0,  159,  159,  255,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  159,  159,  159,  159,
  159,  159,  159,  159,  159,    0,    0,    0,  159,  159,
  159,  159,  159,  159,  159,  159,  159,    0,    0,  255,
    0,    0,    0,    0,    0,    0,  255,  255,    0,    0,
  255,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  255,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  255,
    0,    0,  255,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  256,    0,    0,    0,    0,
    0,  255,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  256,    0,
    0,    0,    0,    0,    0,  256,  256,    0,    0,  256,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  256,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  256,    0,
    0,  256,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  256,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  255,  255,  255,  255,    0,    0,  255,
  255,  255,  255,  255,  255,    0,    0,    0,    0,    0,
    0,    0,    0,  255,  255,    0,  255,  255,  255,  255,
  255,  255,  255,  255,  255,  255,  255,  255,  255,  255,
  255,  255,  255,  255,  255,  255,  255,  255,  255,    0,
    0,  255,  255,  255,  255,  255,  255,  255,  255,  255,
  255,  255,  255,  255,  255,    0,    0,    0,    0,    0,
  255,  255,  255,  255,  255,  255,  255,  255,  255,  255,
  255,    0,    0,  255,  255,  255,  255,    0,    0,  255,
  255,    0,  255,    0,    0,  255,  255,    0,    0,    0,
    0,  255,  255,  255,  255,  255,  255,  255,  255,  255,
    0,    0,    0,  255,  255,  255,  255,  255,  255,  255,
  255,  255,  256,  256,  256,  256,    0,    0,  256,  256,
  256,  256,  256,  256,    0,    0,    0,    0,    0,    0,
    0,    0,  256,  256,    0,  256,  256,  256,  256,  256,
  256,  256,  256,  256,  256,  256,  256,  256,  256,  256,
  256,  256,  256,  256,  256,  256,  256,  256,    0,    0,
  256,  256,  256,  256,  256,  256,  256,  256,  256,  256,
  256,  256,  256,  256,    0,    0,    0,    0,    0,  256,
  256,  256,  256,  256,  256,  256,  256,  256,  256,  256,
    0,    0,  256,  256,  256,  256,    0,    0,  256,  256,
  140,  256,    0,    0,    0,  256,    0,    0,    0,    0,
  256,  256,  256,  256,  256,  256,  256,  256,  256,    0,
    0,    0,  256,  256,  256,  256,  256,  256,  256,  256,
  256,    0,    0,  140,    0,    0,    0,    0,    0,    0,
  140,  140,    0,  140,  140,  140,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  140,
    0,    0,  140,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  140,    0,    0,  140,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  148,
    0,    0,    0,    0,    0,  140,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  148,    0,    0,    0,    0,    0,    0,  148,
  148,    0,    0,  148,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  148,    0,
    0,  148,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  148,    0,    0,  148,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  148,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  140,  140,  140,
  140,    0,    0,  140,    0,  140,  140,  140,  140,    0,
    0,    0,    0,    0,    0,    0,    0,  140,  140,    0,
  140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
  140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
  140,  140,    0,    0,    0,    0,  140,  140,  140,  140,
  140,  140,  140,  140,  140,  140,  140,  140,  140,   41,
    0,    0,    0,    0,  140,  140,  140,  140,  140,  140,
  140,  140,  140,  140,  140,    0,    0,  140,  140,  140,
  140,    0,    0,  140,  140,    0,    0,    0,    0,    0,
    0,   32,    0,    0,    0,  140,  140,  140,  140,  140,
  140,  140,  140,  140,    0,    0,    0,  140,  140,  140,
  140,  140,  140,  140,  140,  140,  148,  148,  148,  148,
    0,    0,  148,   33,  148,  148,  148,  148,    0,    0,
    0,    0,    0,    0,    0,    0,  148,  148,    0,  148,
  148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
  148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
  148,    0,    0,    0,    0,  148,  148,  148,  148,  148,
  148,  148,  148,  148,  148,  148,  148,  148,    0,    0,
    0,    0,    0,  148,  148,  148,  148,  148,  148,  148,
  148,  148,  148,  148,    0,    0,  148,  148,  148,  148,
    0,    0,  148,  148,  154,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  148,  148,  148,  148,  148,  148,
  148,  148,  148,    0,    0,    0,  148,  148,  148,  148,
  148,  148,  148,  148,  148,    0,    0,  154,    0,    0,
    0,    0,    0,    0,  154,  154,    0,    0,  154,    0,
    0,    0,    0,    0,    0,    0,    0,    6,    7,    0,
    8,    9,    0,  154,    0,    0,    0,    0,    0,   10,
   11,   12,   13,   14,   15,   16,   17,    0,    0,   18,
    0,    0,   19,   20,   21,   22,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  154,    0,    0,
  154,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   91,    0,    0,    0,    0,    0,  154,
    0,    0,    0,    0,    0,   23,    0,    0,    0,    0,
    0,   24,   25,    0,    0,   26,    0,   27,    0,    0,
    0,    0,    0,    0,    0,    0,   91,    0,    0,    0,
    0,    0,    0,   91,   28,    0,   29,    0,    0,    0,
    0,    0,    0,    0,    0,   30,   31,    0,    0,    0,
    0,    0,   91,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   91,    0,    0,   91,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   91,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  154,  154,  154,  154,    0,    0,  154,    0,  154,
  154,  154,  154,    0,    0,    0,    0,    0,    0,    0,
    0,  154,  154,    0,  154,  154,  154,  154,  154,  154,
  154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
  154,  154,  154,  154,  154,  154,    0,    0,    0,    0,
  154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
  154,  154,  154,    0,    0,    0,    0,    0,  154,  154,
  154,  154,  154,  154,  154,  154,  154,  154,  154,    0,
    0,  154,  154,  154,  154,    0,    0,  154,  154,    0,
    0,    0,    0,   32,    0,    0,    0,    0,    0,  154,
  154,  154,  154,  154,  154,  154,  154,  154,    0,    0,
    0,  154,  154,  154,  154,  154,  154,  154,  154,  154,
   91,   91,   91,   91,    0,   33,   91,    0,   91,   91,
   91,   91,    0,    0,    0,    0,    0,    0,    0,    0,
   91,   91,    0,   91,   91,   91,   91,   91,   91,   91,
   91,   91,   91,   91,   91,   91,   91,   91,   91,   91,
   91,   91,   91,   91,   91,    0,    0,    0,    0,    0,
   91,   91,   91,   91,   91,   91,   91,   91,   91,   91,
   91,   91,    0,    0,    0,    0,    0,   91,   91,   91,
   91,   91,   91,   91,   91,   91,   91,   91,    0,    0,
   91,   91,   91,   91,    0,    0,   91,   91,   87,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   91,   91,
   91,   91,   91,   91,   91,   91,   91,    0,    0,    0,
   91,   91,   91,   91,   91,   91,   91,   91,   91,    0,
    0,   87,    0,    0,    0,    0,    0,    0,   87,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    6,
    7,    0,    8,    9,    0,    0,    0,   87,    0,    0,
    0,   10,   11,   12,   13,   14,   15,   16,   17,    0,
    0,   18,    0,    0,   19,   20,   21,   22,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   87,    0,    0,   87,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   88,    0,    0,
    0,    0,    0,   87,    0,    0,    0,   23,    0,    0,
    0,    0,    0,   24,   25,    0,    0,   26,    0,   27,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   88,    0,    0,    0,    0,    0,   28,   88,   29,    0,
    0,    0,    0,    0,    0,    0,    0,   30,   31,    0,
    0,    0,    0,    0,    0,    0,   88,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   88,    0,    0,   88,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   88,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   87,   87,   87,   87,    0,
    0,   87,    0,   87,   87,   87,   87,    0,    0,    0,
    0,    0,    0,    0,    0,   87,   87,    0,   87,   87,
   87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
   87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
    0,    0,    0,    0,    0,   87,   87,   87,   87,   87,
   87,   87,   87,   87,   87,   87,   87,    0,    0,    0,
    0,    0,   87,   87,   87,   87,   87,   87,   87,   87,
   87,   87,   87,    0,    0,   87,   87,   87,   87,    0,
    0,   87,   87,    0,    0,    0,    0,    6,    0,    0,
    0,    0,    0,   87,   87,   87,   87,   87,   87,   87,
   87,   87,    0,    0,    0,   87,   87,   87,   87,   87,
   87,   87,   87,   87,   88,   88,   88,   88,    0,    6,
   88,    0,   88,   88,   88,   88,    0,    0,    0,    0,
    0,    0,    0,    0,   88,   88,    0,   88,   88,   88,
   88,   88,   88,   88,   88,   88,   88,   88,   88,   88,
   88,   88,   88,   88,   88,   88,   88,   88,   88,    0,
    0,    0,    0,    0,   88,   88,   88,   88,   88,   88,
   88,   88,   88,   88,   88,   88,    0,    0,    0,    0,
    0,   88,   88,   88,   88,   88,   88,   88,   88,   88,
   88,   88,    0,    0,   88,   88,   88,   88,    0,    0,
   88,   88,   89,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   88,   88,   88,   88,   88,   88,   88,   88,
   88,    0,    0,    0,   88,   88,   88,   88,   88,   88,
   88,   88,   88,    0,    0,   89,    0,    0,    0,    0,
    0,    0,   89,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    6,    6,    0,    6,    6,    0,    0,
    0,   89,    0,    0,    0,    6,    6,    6,    6,    6,
    6,    6,    6,    0,    0,    6,    0,    0,    6,    6,
    6,    6,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   89,    0,    0,   89,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   90,    0,    0,    0,    0,    0,   89,    0,    0,
    0,    6,    0,    0,    0,    0,    0,    6,    6,    0,
    0,    6,    0,    6,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   90,    0,    0,    0,    0,    0,
    6,   90,    6,    0,    0,    0,    0,    0,    0,    0,
    0,    6,    6,    0,    0,    0,    0,    0,    0,    0,
   90,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   90,    0,    0,   90,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   90,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   89,
   89,   89,   89,    0,    0,   89,    0,   89,   89,   89,
   89,    0,    0,    0,    0,    0,    0,    0,    0,   89,
   89,    0,   89,   89,   89,   89,   89,   89,   89,   89,
   89,   89,   89,   89,   89,   89,   89,   89,   89,   89,
   89,   89,   89,   89,    0,    0,    0,    0,    0,   89,
   89,   89,   89,   89,   89,   89,   89,   89,   89,   89,
   89,    0,    0,    0,    0,    0,   89,   89,   89,   89,
   89,   89,   89,   89,   89,   89,   89,    0,    0,   89,
   89,   89,   89,    0,    0,   89,   89,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   89,   89,   89,
   89,   89,   89,   89,   89,   89,    0,    0,    0,   89,
   89,   89,   89,   89,   89,   89,   89,   89,   90,   90,
   90,   90,    0,    0,   90,    0,   90,   90,   90,   90,
    0,    0,    0,    0,    0,    0,    0,    0,   90,   90,
    0,   90,   90,   90,   90,   90,   90,   90,   90,   90,
   90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
   90,   90,   90,    0,    0,    0,    0,    0,   90,   90,
   90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
    0,    0,    0,    0,    0,   90,   90,   90,   90,   90,
   90,   90,   90,   90,   90,   90,    0,    0,   90,   90,
   90,   90,    0,    0,   90,   90,   93,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   90,   90,   90,   90,
   90,   90,   90,   90,   90,    0,    0,    0,   90,   90,
   90,   90,   90,   90,   90,   90,   90,    0,    0,   93,
    0,    0,    0,    0,    0,    0,   93,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   93,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   93,
    0,    0,   93,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   95,    0,    0,    0,    0,
    0,   93,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   95,    0,
    0,    0,    0,    0,    0,   95,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   95,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   95,    0,
    0,   95,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   95,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   93,   93,   93,   93,    0,    0,   93,
    0,   93,   93,   93,   93,    0,    0,    0,    0,    0,
    0,    0,    0,   93,   93,    0,   93,   93,   93,   93,
   93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
   93,   93,   93,   93,   93,   93,   93,   93,    0,    0,
    0,    0,    0,   93,   93,   93,   93,   93,   93,   93,
   93,   93,   93,   93,   93,    0,    0,    0,    0,    0,
   93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
   93,    0,    0,   93,   93,   93,   93,    0,    0,   93,
   93,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   93,   93,   93,   93,   93,   93,   93,   93,   93,
    0,    0,    0,   93,   93,   93,   93,   93,   93,   93,
   93,   93,   95,   95,   95,   95,    0,    0,   95,    0,
   95,   95,   95,   95,    0,    0,    0,    0,    0,    0,
    0,    0,   95,   95,    0,   95,   95,   95,   95,   95,
   95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
   95,   95,   95,   95,   95,   95,   95,    0,    0,    0,
    0,    0,   95,   95,   95,   95,   95,   95,   95,   95,
   95,   95,   95,   95,    0,    0,    0,    0,    0,   95,
   95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
    0,    0,   95,   95,   95,   95,    0,    0,   95,   95,
   97,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   95,   95,   95,   95,   95,   95,   95,   95,   95,    0,
    0,    0,   95,   95,   95,   95,   95,   95,   95,   95,
   95,    0,    0,   97,    0,    0,    0,    0,    0,    0,
   97,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   97,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   97,    0,    0,   97,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   99,
    0,    0,    0,    0,    0,   97,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   99,    0,    0,    0,    0,    0,    0,   99,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   99,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   99,    0,    0,   99,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   99,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   97,   97,   97,
   97,    0,    0,   97,    0,   97,   97,   97,   97,    0,
    0,    0,    0,    0,    0,    0,    0,   97,   97,    0,
   97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
   97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
   97,   97,    0,    0,    0,    0,    0,   97,   97,   97,
   97,   97,   97,   97,   97,   97,   97,   97,   97,    0,
    0,    0,    0,    0,   97,   97,   97,   97,   97,   97,
   97,   97,   97,   97,   97,    0,    0,   97,   97,   97,
   97,    0,    0,   97,   97,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   97,   97,   97,   97,   97,
   97,   97,   97,   97,    0,    0,    0,   97,   97,   97,
   97,   97,   97,   97,   97,   97,   99,   99,   99,   99,
    0,    0,   99,    0,   99,   99,   99,   99,    0,    0,
    0,    0,    0,    0,    0,    0,   99,   99,    0,   99,
   99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
   99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
   99,    0,    0,    0,    0,    0,   99,   99,   99,   99,
   99,   99,   99,   99,   99,   99,   99,   99,    0,    0,
    0,    0,    0,   99,   99,   99,   99,   99,   99,   99,
   99,   99,   99,   99,    0,    0,   99,   99,   99,   99,
    0,    0,   99,   99,  100,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   99,   99,   99,   99,   99,   99,
   99,   99,   99,    0,    0,    0,   99,   99,   99,   99,
   99,   99,   99,   99,   99,    0,    0,  100,    0,    0,
    0,    0,    0,    0,  100,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  100,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  100,    0,    0,
  100,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  101,    0,    0,    0,    0,    0,  100,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  101,    0,    0,    0,
    0,    0,    0,  101,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  101,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  101,    0,    0,  101,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  101,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  100,  100,  100,  100,    0,    0,  100,    0,  100,
  100,  100,  100,    0,    0,    0,    0,    0,    0,    0,
    0,  100,  100,    0,  100,  100,  100,  100,  100,  100,
  100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
  100,  100,  100,  100,  100,  100,    0,    0,    0,    0,
    0,  100,  100,  100,  100,  100,  100,  100,  100,  100,
  100,  100,  100,    0,    0,    0,    0,    0,  100,  100,
  100,  100,  100,  100,  100,  100,  100,  100,  100,    0,
    0,  100,  100,  100,  100,    0,    0,  100,  100,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  100,
  100,  100,  100,  100,  100,  100,  100,  100,    0,    0,
    0,  100,  100,  100,  100,  100,  100,  100,  100,  100,
  101,  101,  101,  101,    0,    0,  101,    0,  101,  101,
  101,  101,    0,    0,    0,    0,    0,    0,    0,    0,
  101,  101,    0,  101,  101,  101,  101,  101,  101,  101,
  101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
  101,  101,  101,  101,  101,    0,    0,    0,    0,    0,
  101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
  101,  101,    0,    0,    0,    0,    0,  101,  101,  101,
  101,  101,  101,  101,  101,  101,  101,  101,    0,    0,
  101,  101,  101,  101,    0,    0,  101,  101,  102,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  101,  101,
  101,  101,  101,  101,  101,  101,  101,    0,    0,    0,
  101,  101,  101,  101,  101,  101,  101,  101,  101,    0,
    0,  102,    0,    0,    0,    0,    0,    0,  102,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  102,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  102,    0,    0,  102,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  104,    0,    0,
    0,    0,    0,  102,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  104,    0,    0,    0,    0,    0,    0,  104,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  104,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  104,    0,    0,  104,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  104,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  102,  102,  102,  102,    0,
    0,  102,    0,  102,  102,  102,  102,    0,    0,    0,
    0,    0,    0,    0,    0,  102,  102,    0,  102,  102,
  102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
  102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
    0,    0,    0,    0,    0,  102,  102,  102,  102,  102,
  102,  102,  102,  102,  102,  102,  102,    0,    0,    0,
    0,    0,  102,  102,  102,  102,  102,  102,  102,  102,
  102,  102,  102,    0,    0,  102,  102,  102,  102,    0,
    0,  102,  102,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  102,  102,  102,  102,  102,  102,  102,
  102,  102,    0,    0,    0,  102,  102,  102,  102,  102,
  102,  102,  102,  102,  104,  104,  104,  104,    0,    0,
  104,    0,  104,  104,  104,  104,    0,    0,    0,    0,
    0,    0,    0,    0,  104,  104,    0,  104,  104,  104,
  104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
  104,  104,  104,  104,  104,  104,  104,  104,  104,    0,
    0,    0,    0,    0,  104,  104,  104,  104,  104,  104,
  104,  104,  104,  104,  104,  104,    0,    0,    0,    0,
    0,  104,  104,  104,  104,  104,  104,  104,  104,  104,
  104,  104,    0,    0,  104,  104,  104,  104,    0,    0,
  104,  104,  109,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  104,  104,  104,  104,  104,  104,  104,  104,
  104,    0,    0,    0,  104,  104,  104,  104,  104,  104,
  104,  104,  104,    0,    0,  109,    0,    0,    0,    0,
    0,    0,  109,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  109,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  109,    0,    0,  109,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  111,    0,    0,    0,    0,    0,  109,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  111,    0,    0,    0,    0,    0,
    0,  111,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  111,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  111,    0,    0,  111,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  111,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  109,
  109,  109,  109,    0,    0,  109,    0,  109,  109,  109,
  109,    0,    0,    0,    0,    0,    0,    0,    0,  109,
  109,    0,  109,  109,  109,  109,  109,  109,  109,  109,
  109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
  109,  109,  109,  109,    0,    0,    0,    0,    0,  109,
  109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
  109,    0,    0,    0,    0,    0,  109,  109,  109,  109,
  109,  109,  109,  109,  109,  109,  109,    0,    0,  109,
  109,  109,  109,    0,    0,  109,  109,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  109,  109,  109,
  109,  109,  109,  109,  109,  109,    0,    0,    0,  109,
  109,  109,  109,  109,  109,  109,  109,  109,  111,  111,
  111,  111,    0,    0,  111,    0,  111,  111,  111,  111,
    0,    0,    0,    0,    0,    0,    0,    0,  111,  111,
    0,  111,  111,  111,  111,  111,  111,  111,  111,  111,
  111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
  111,  111,  111,    0,    0,    0,    0,    0,  111,  111,
  111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
    0,    0,    0,    0,    0,  111,  111,  111,  111,  111,
  111,  111,  111,  111,  111,  111,    0,    0,  111,  111,
  111,  111,    0,    0,  111,  111,  120,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  111,  111,  111,  111,
  111,  111,  111,  111,  111,    0,    0,    0,  111,  111,
  111,  111,  111,  111,  111,  111,  111,    0,    0,  120,
    0,    0,    0,    0,    0,    0,  120,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  120,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  120,
    0,    0,  120,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  133,    0,    0,    0,    0,
    0,  120,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  133,    0,
    0,    0,    0,    0,    0,  133,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  133,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  133,    0,
    0,  133,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  133,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  120,  120,  120,  120,    0,    0,  120,
    0,  120,  120,  120,  120,    0,    0,    0,    0,    0,
    0,    0,    0,  120,  120,    0,  120,  120,  120,  120,
  120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
  120,  120,  120,  120,  120,  120,  120,  120,    0,    0,
    0,    0,    0,  120,  120,  120,  120,  120,  120,  120,
  120,  120,  120,  120,  120,    0,    0,    0,    0,    0,
  120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
  120,    0,    0,  120,  120,  120,  120,    0,    0,  120,
  120,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  120,  120,  120,  120,  120,  120,  120,  120,  120,
    0,    0,    0,  120,  120,  120,  120,  120,  120,  120,
  120,  120,  133,  133,  133,  133,    0,    0,  133,    0,
  133,  133,  133,  133,    0,    0,    0,    0,    0,    0,
    0,    0,  133,  133,    0,  133,  133,  133,  133,  133,
  133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
  133,  133,  133,  133,  133,  133,  133,    0,    0,    0,
    0,    0,  133,  133,  133,  133,  133,  133,  133,  133,
  133,  133,  133,  133,    0,    0,    0,    0,    0,  133,
  133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
    0,    0,  133,  133,  133,  133,    0,    0,  133,  133,
  113,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  133,  133,  133,  133,  133,  133,  133,  133,  133,    0,
    0,    0,  133,  133,  133,  133,  133,  133,  133,  133,
  133,    0,    0,  113,    0,    0,    0,    0,    0,    0,
  113,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  113,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  113,    0,    0,  113,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  114,
    0,    0,    0,    0,    0,  113,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  114,    0,    0,    0,    0,    0,    0,  114,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  114,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  114,    0,    0,  114,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  114,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  113,  113,  113,
  113,    0,    0,  113,    0,  113,  113,  113,  113,    0,
    0,    0,    0,    0,    0,    0,    0,  113,  113,    0,
  113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
  113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
  113,  113,    0,    0,    0,    0,    0,  113,  113,  113,
  113,  113,  113,  113,  113,  113,  113,  113,  113,    0,
    0,    0,    0,    0,  113,  113,  113,  113,  113,  113,
  113,  113,  113,  113,  113,    0,    0,  113,  113,  113,
  113,    0,    0,  113,  113,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  113,  113,  113,  113,  113,
  113,  113,  113,  113,    0,    0,    0,  113,  113,  113,
  113,  113,  113,  113,  113,  113,  114,  114,  114,  114,
    0,    0,  114,    0,  114,  114,  114,  114,    0,    0,
    0,    0,    0,    0,    0,    0,  114,  114,    0,  114,
  114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
  114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
  114,    0,    0,    0,    0,    0,  114,  114,  114,  114,
  114,  114,  114,  114,  114,  114,  114,  114,    0,    0,
    0,    0,    0,  114,  114,  114,  114,  114,  114,  114,
  114,  114,  114,  114,    0,    0,  114,  114,  114,  114,
    0,    0,  114,  114,  115,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  114,  114,  114,  114,  114,  114,
  114,  114,  114,    0,    0,    0,  114,  114,  114,  114,
  114,  114,  114,  114,  114,    0,    0,  115,    0,    0,
    0,    0,    0,    0,  115,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  115,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  115,    0,    0,
  115,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  181,    0,    0,    0,    0,    0,    0,  115,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  181,    0,    0,    0,    0,
    0,    0,  181,    0,    0,    0,  181,  181,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  181,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  181,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  181,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  115,  115,  115,  115,    0,    0,  115,    0,  115,
  115,  115,  115,    0,    0,    0,    0,    0,    0,    0,
    0,  115,  115,    0,  115,  115,  115,  115,  115,  115,
  115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
  115,  115,  115,  115,  115,  115,    0,    0,    0,    0,
    0,  115,  115,  115,  115,  115,  115,  115,  115,  115,
  115,  115,  115,    0,    0,    0,    0,    0,  115,  115,
  115,  115,  115,  115,  115,  115,  115,  115,  115,    0,
    0,  115,  115,  115,  115,    0,    0,  115,  115,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  115,
  115,  115,  115,  115,  115,  115,  115,  115,    0,    0,
    0,  115,  115,  115,  115,  115,  115,  115,  115,  115,
  181,  181,  181,    0,    0,    0,    0,  181,  181,  181,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  181,
  181,    0,  181,  181,  181,  181,  181,  181,  181,  181,
  181,  181,  181,  181,  181,  181,  181,  181,  181,  181,
  181,  181,  181,  181,    0,    0,    0,    0,    0,  181,
  181,  181,  181,  181,  181,  181,  181,  181,  181,  181,
  181,    0,    0,    0,    0,    0,  181,  181,  181,  181,
  181,  181,  181,  181,  181,  181,  181,    0,    0,  181,
  181,  181,  181,    0,    0,  181,  181,  156,    0,    0,
    0,    0,    0,    0,    0,  199,    0,  181,  181,  181,
  181,  181,  181,  181,  181,  181,    0,    0,    0,  181,
  181,  181,  181,  181,  181,  181,  181,  181,    0,    0,
  156,    0,    0,    0,    0,    0,    0,  156,  156,    0,
  156,  156,  156,    0,    0,    0,    0,    0,    0,    0,
  272,  273,  274,  284,    0,    0,  156,    0,    0,  156,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  306,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  156,    0,    0,  156,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  161,    0,    0,    0,
    0,    0,  156,    0,    0,  340,    0,    0,    0,    0,
    0,    0,    0,  348,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  161,
    0,    0,    0,    0,    0,    0,  161,    0,    0,  161,
    0,  161,  161,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  161,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  199,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  161,
    0,    0,  161,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  395,  396,    0,    0,    0,
  397,  161,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  156,  156,  156,  156,    0,    0,
  156,    0,  156,  156,  156,  156,    0,    0,    0,    0,
    0,    0,    0,    0,  156,  156,    0,  156,  156,  156,
  156,  156,  156,  156,  156,  156,  156,  156,  156,  156,
  156,  156,  156,  156,  156,  156,  156,  156,  156,    0,
    0,    0,    0,  156,  156,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  425,  426,  156,  156,  156,  156,
  156,  156,  156,  156,  156,  156,  156,  156,  156,  156,
  156,  156,  438,  439,    0,    0,    0,    0,    0,    0,
  156,  156,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  156,  156,  156,  156,  156,  156,
  156,  156,  156,  161,  161,  161,  161,    0,    0,  161,
    0,  161,  161,  161,  161,    0,    0,    0,    0,    0,
    0,    0,    0,  161,  161,    0,  161,  161,  161,  161,
  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
  161,  161,  161,  161,  161,  161,  161,  161,    0,    0,
    0,  182,    0,  161,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  161,  161,  161,  161,  161,
  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
  161,    0,    0,    0,  182,    0,    0,    0,    0,  161,
  161,  182,  182,    0,    0,  182,  182,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  182,    0,    0,  161,  161,  161,  161,  161,  161,  161,
  161,  161,    0,    0,    0,    0,    0,    0,    0,  249,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  182,    0,    0,  182,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  249,    0,    0,    0,    0,    0,    0,  249,
  249,    0,    0,  249,    0,    0,  182,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  249,  249,
    0,  249,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  249,    0,    0,  249,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  249,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   43,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   43,
    0,    0,    0,    0,    0,    0,   43,    0,  182,  182,
  182,  182,    0,    0,  182,    0,  182,  182,  182,  182,
    0,    0,    0,    0,    0,   43,    0,    0,  182,  182,
    0,  182,  182,  182,  182,    0,    0,  182,  182,  182,
  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
  182,  182,  182,    0,    0,    0,    0,    0,  182,   43,
    0,    0,   43,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  182,  182,  182,  182,  182,
  182,  182,  182,  182,  182,  182,  249,  249,  249,  249,
    0,   43,  249,    0,  182,  182,    0,  249,    0,    0,
    0,    0,    0,    0,    0,   96,    0,    0,    0,    0,
    0,    0,    0,  249,  249,    0,    0,    0,  182,  182,
  182,  182,  182,  182,  182,  182,  182,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  249,  249,  249,  249,
  249,  249,  249,  249,  249,  249,  249,  249,    0,    0,
    0,    0,    0,  249,  249,  249,  249,  249,  249,  249,
  249,  249,  249,  249,   96,    0,  249,  249,  249,  249,
    0,    0,    0,    0,    0,    0,   45,    0,  249,  249,
  249,  249,  249,  249,  249,  249,  249,  249,  249,  249,
  249,  249,  249,    0,    0,    0,    0,    0,   96,    0,
    0,    0,    0,    0,  249,    0,    0,    0,    0,   45,
    0,    0,    0,    0,    0,    0,   45,    0,    0,    0,
    0,    0,    0,   43,   43,   43,   43,    0,    0,   43,
   96,    0,    0,    0,   43,   45,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   43,   43,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   45,
    0,    0,   45,   43,   43,   43,   43,   43,   43,   43,
   43,   43,   43,   43,   43,    0,    0,   98,    0,    0,
   43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
   43,   45,    0,   43,   43,   43,   43,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   43,   43,   43,   43,   43,   43,   43,   43,   43,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   43,    0,    0,    0,    0,   98,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   96,    0,    0,    0,    0,
   96,   96,   96,    0,    0,    0,    0,    0,    0,    0,
   98,    0,   96,   96,    0,   96,   96,   96,   96,   96,
   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
   96,   96,   96,   96,   96,   96,   96,  204,    0,    0,
    0,    0,   98,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   45,   45,   45,   45,   92,    0,   45,
    0,    0,    0,    0,   45,    0,    0,    0,   96,   96,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   45,   45,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   96,   96,   96,   96,   96,   96,   96,   96,
   96,    0,    0,   45,   45,   45,   45,   45,   45,   45,
   45,   45,   45,   45,   45,    0,   92,    0,    0,    0,
   45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
   45,    0,    0,   45,   45,   45,   45,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   92,   45,   45,   45,   45,   45,   45,   45,   45,   45,
    0,    0,    0,    0,    0,    0,    0,   98,    0,    0,
    0,   45,   98,   98,   98,   94,    0,    0,    0,    0,
    0,    0,   92,    0,   98,   98,    0,   98,   98,   98,
   98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
   98,   98,   98,   98,   98,   98,   98,   98,   98,  203,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   94,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   98,   98,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   94,    0,
    0,    0,    0,    0,   98,   98,   98,   98,   98,   98,
   98,   98,   98,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   94,    0,    0,    0,    0,    0,    0,    0,    0,  108,
    0,    0,    0,    0,    0,    0,    0,   92,    0,    0,
    0,    0,   92,   92,   92,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   92,   92,    0,   92,   92,   92,
   92,   92,   92,   92,   92,   92,   92,   92,   92,   92,
   92,   92,   92,   92,   92,   92,   92,   92,   92,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  108,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   92,   92,  108,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   92,   92,   92,   92,   92,   92,
   92,   92,   92,  110,  108,   94,    0,    0,    0,    0,
   94,   94,   94,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   94,   94,    0,   94,   94,   94,   94,   94,
   94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
   94,   94,   94,   94,   94,   94,   94,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  110,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   94,   94,
    0,    0,    0,    0,    0,    0,  110,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   94,   94,   94,   94,   94,   94,   94,   94,
   94,    0,    0,    0,    0,    0,    0,    0,  110,    0,
    0,  119,    0,    0,    0,    0,    0,    0,    0,  108,
    0,    0,    0,    0,  108,  108,  108,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  108,  108,    0,  108,
  108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
  108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
  108,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  119,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  108,  108,  119,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  108,  108,  108,  108,
  108,  108,  108,  108,  108,  112,  119,    0,    0,    0,
    0,    0,    0,  110,    0,    0,    0,    0,  110,  110,
  110,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  110,  110,    0,  110,  110,  110,  110,  110,  110,  110,
  110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
  110,  110,  110,  110,  110,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  112,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  110,  110,  112,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  110,  110,  110,  110,  110,  110,  110,  110,  110,    0,
  112,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  119,    0,    0,    0,    0,  119,  119,  119,    0,
   83,    0,    0,    0,    0,    0,    0,    0,  119,  119,
    0,  119,  119,  119,  119,  119,  119,  119,  119,  119,
  119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
  119,  119,  119,   83,    0,    0,    0,    0,    0,    0,
   83,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   83,
    0,    0,    0,    0,    0,    0,    0,  161,    0,    0,
    0,    0,    0,    0,  119,  119,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   83,    0,    0,   83,    0,  119,  119,
  119,  119,  119,  119,  119,  119,  119,    0,    0,    0,
  161,    0,  161,  161,    0,  112,    0,    0,    0,    0,
  112,  112,  112,    0,    0,   83,  161,    0,    0,    0,
    0,    0,  112,  112,    0,  112,  112,  112,  112,  112,
  112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
  112,  112,  112,  112,  112,  112,  112,    0,    0,    0,
  161,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  161,    0,    0,    0,    0,    0,  112,  112,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  112,  112,  112,  112,  112,  112,  112,  112,
  112,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   83,   83,   83,
    0,    0,    0,   83,    0,   83,   83,   83,   83,    0,
    0,    0,    0,    0,    0,    0,    0,   83,   83,    0,
   83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
   83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
   83,   83,    0,    0,    0,    0,    0,   83,   83,   83,
   83,   83,   83,   83,   83,   83,   83,   83,   83,    0,
    0,    0,    0,    0,   83,   83,   83,   83,   83,   83,
   83,   83,   83,   83,   83,    0,    0,   83,   83,   83,
   83,    0,    0,   83,   83,    0,    0,    0,    0,    0,
    0,  161,  161,    0,  257,   83,   83,   83,   83,   83,
   83,   83,   83,   83,    0,    0,    0,   83,   83,   83,
   83,   83,   83,   83,   83,  161,  161,  161,  161,  161,
  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
  161,  257,    0,    0,    0,  257,  257,  257,  257,  257,
    0,  257,    0,    0,  161,  161,  161,  161,    0,    0,
    0,    0,    0,  257,  257,    0,  257,    0,    0,    0,
    0,    0,  161,  161,  161,  161,  161,  161,  161,  161,
  161,    0,    0,    0,    0,    0,   95,    0,    0,    0,
    0,    0,    0,   92,    0,    0,    0,  257,   94,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  257,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   32,    0,    0,    0,    0,   93,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   33,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    6,    0,    0,    0,
    0,    0,    0,    6,    0,    0,    0,    0,    6,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    6,    0,    0,    0,    0,    6,
    0,    0,    0,    0,    0,    0,    0,    0,  257,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    6,    0,    0,    0,
    0,    0,    0,    0,    0,  257,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  257,    0,    0,  257,
  299,  300,   51,    8,    9,    0,   52,    0,    0,    0,
    0,   53,   10,   11,   12,   13,   14,   15,   16,   17,
    0,    0,   18,   95,    0,   19,   20,  301,  302,    0,
  110,    0,    0,    0,    0,   94,    0,    0,    0,    0,
    0,    0,    0,  257,  257,  257,  257,  257,  257,    0,
   56,   57,   58,   59,   60,   61,   62,   63,   64,   65,
   66,   67,    0,    0,    0,    0,    0,   68,   69,   70,
   71,   72,   73,   74,   75,   76,   77,   78,   23,    0,
   79,   80,   81,   82,   24,   25,   93,    0,   26,    0,
   27,    0,    0,    0,    0,    0,    0,    0,   83,   84,
   85,   86,   87,   88,   89,   90,   91,   28,    0,   29,
    6,    6,    6,    6,    6,    0,    6,    0,   30,   31,
    0,    6,    6,    6,    6,    6,    6,    6,    6,    6,
    0,    0,    6,    0,    0,    6,    6,    6,    6,    0,
    0,    0,  111,    0,    0,    0,    0,    0,    0,  110,
  319,    0,    0,    0,   94,    0,    0,    0,    0,    0,
    6,    6,    6,    6,    6,    6,    6,    6,    6,    6,
    6,    6,    0,    0,    0,    0,    0,    6,    6,    6,
    6,    6,    6,    6,    6,    6,    6,    6,    6,    0,
    6,    6,    6,    6,    6,    6,    0,    0,    6,    0,
    6,    0,    0,    0,    0,   93,    0,    0,    6,    6,
    6,    6,    6,    6,    6,    6,    6,    6,    0,    6,
    0,    0,    0,    0,    0,    0,    0,    0,    6,    6,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   49,   50,   51,
    8,    0,    0,   52,    0,  126,  127,  128,   53,    0,
    0,    0,    0,    0,    0,    0,    0,  129,  130,    0,
  131,  132,  133,  134,  135,  136,  137,  138,  139,  140,
  141,  142,  143,  144,  145,  146,  147,  148,  149,  150,
  151,  152,    0,    0,    0,    0,    0,   56,   57,   58,
   59,   60,   61,   62,   63,   64,   65,   66,   67,    0,
    0,    0,    0,    0,   68,   69,   70,   71,   72,   73,
   74,   75,   76,   77,   78,  111,    0,   79,   80,   81,
   82,    0,   92,  153,  154,    0,    0,   94,  278,    0,
    0,    0,    0,    0,    0,   83,   84,   85,   86,   87,
   88,   89,   90,   91,    0,    0,    0,  155,  156,  157,
  158,  159,  160,  161,  162,   30,   49,   50,   51,    8,
    0,    0,   52,    0,    0,    0,    0,   53,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   93,    0,
    0,    0,    0,   54,   55,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   56,   57,   58,   59,
   60,   61,   62,   63,   64,   65,   66,   67,    0,    0,
    0,    0,    0,   68,   69,   70,   71,   72,   73,   74,
   75,   76,   77,   78,   95,    0,   79,   80,   81,   82,
    0,   92,    0,    0,    0,    0,   94,    0,    0,    0,
    0,    0,    0,    0,   83,   84,   85,   86,   87,   88,
   89,   90,   91,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   30,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   93,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  111,    0,
    0,    0,    0,    0,    0,  110,    0,    0,    0,    0,
   94,    0,    0,    0,    0,    0,    0,    0,    0,   49,
   50,   51,    8,    0,    0,   52,    0,    0,    0,    0,
   53,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   54,   55,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   93,    0,    0,    0,    0,    0,    0,    0,   56,
   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,
   67,    0,    0,    0,    0,    0,   68,   69,   70,   71,
   72,   73,   74,   75,   76,   77,   78,    0,    0,   79,
   80,   81,   82,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   83,   84,   85,
   86,   87,   88,   89,   90,   91,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   30,   49,   50,
   51,    8,    0,    0,   52,    0,    0,    0,    0,   53,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  111,    0,   54,   55,    0,    0,    0,
   92,    0,    0,    0,    0,   94,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   56,   57,
   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
    0,    0,    0,    0,    0,   68,   69,   70,   71,   72,
   73,   74,   75,   76,   77,   78,    0,    0,   79,   80,
   81,   82,   49,   50,   51,    8,   93,    0,   52,    0,
    0,    0,    0,   53,    0,    0,   83,   84,   85,   86,
   87,   88,   89,   90,   91,    0,    0,  111,    0,   54,
   55,    0,    0,    0,  285,    0,   30,    0,    0,   94,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   56,   57,   58,   59,   60,   61,   62,   63,
   64,   65,   66,   67,    0,    0,    0,    0,    0,   68,
   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
    0,    0,   79,   80,   81,   82,    0,    0,    0,    0,
   93,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   83,   84,   85,   86,   87,   88,   89,   90,   91,    0,
    0,   95,    0,    0,    0,    0,    0,    0,  279,    0,
   30,    0,    0,   94,  278,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   49,   50,   51,
    8,    0,    0,   52,   93,    0,    0,    0,   53,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   54,   55,   95,    0,    0,    0,
    0,    0,    0,  110,    0,  446,    0,    0,   94,    0,
    0,    0,    0,    0,    0,    0,    0,   56,   57,   58,
   59,   60,   61,   62,   63,   64,   65,   66,   67,    0,
    0,    0,    0,    0,   68,   69,   70,   71,   72,   73,
   74,   75,   76,   77,   78,    0,    0,   79,   80,   81,
   82,   49,   50,   51,    8,    0,    0,   52,    0,   93,
    0,    0,   53,    0,    0,   83,   84,   85,   86,   87,
   88,   89,   90,   91,    0,    0,    0,    0,   54,   55,
   95,    0,    0,    0,    0,   30,    0,  110,    0,    0,
    0,    0,   94,    0,    0,    0,    0,    0,    0,    0,
    0,   56,   57,   58,   59,   60,   61,   62,   63,   64,
   65,   66,   67,    0,    0,    0,    0,    0,   68,   69,
   70,   71,   72,   73,   74,   75,   76,   77,   78,    0,
    0,   79,   80,   81,   82,  275,   50,   51,    0,    0,
    0,  276,    0,   93,    0,    0,  277,    0,    0,   83,
   84,   85,   86,   87,   88,   89,   90,   91,    0,    0,
    0,    0,   54,   55,   95,    0,    0,    0,    0,   30,
    0,   92,    0,    0,    0,    0,   94,    0,    0,    0,
    0,    0,    0,    0,    0,   56,   57,   58,   59,   60,
   61,   62,   63,   64,   65,   66,   67,    0,    0,    0,
    0,    0,   68,   69,   70,   71,   72,   73,   74,   75,
   76,   77,   78,    0,    0,   79,   80,   81,   82,    0,
   49,   50,   51,    0,    0,    0,   52,   93,    0,    0,
    0,   53,    0,   83,   84,   85,   86,   87,   88,   89,
   90,   91,    0,    0,    0,    0,    0,   54,   55,   95,
    0,    0,    0,    0,    0,    0,  285,    0,    0,    0,
    0,   94,    0,    0,    0,    0,    0,    0,    0,    0,
   56,   57,   58,   59,   60,   61,   62,   63,   64,   65,
   66,   67,    0,    0,    0,    0,    0,   68,   69,   70,
   71,   72,   73,   74,   75,   76,   77,   78,    0,    0,
   79,   80,   81,   82,   49,   50,   51,    0,    0,    0,
   52,    0,   93,    0,    0,   53,    0,    0,   83,   84,
   85,   86,   87,   88,   89,   90,   91,    0,    0,    0,
    0,   54,   55,   95,    0,    0,    0,    0,    0,    0,
  110,    0,    0,    0,    0,   94,    0,    0,    0,    0,
    0,    0,    0,    0,   56,   57,   58,   59,   60,   61,
   62,   63,   64,   65,   66,   67,    0,    0,    0,    0,
    0,   68,   69,   70,   71,   72,   73,   74,   75,   76,
   77,   78,    0,    0,   79,   80,   81,   82,   49,   50,
   51,    0,    0,    0,   52,    0,   93,    0,    0,   53,
    0,    0,   83,   84,   85,   86,   87,   88,   89,   90,
   91,    0,    0,    0,    0,   54,   55,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   56,   57,
   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
    0,    0,    0,    0,    0,   68,   69,   70,   71,   72,
   73,   74,   75,   76,   77,   78,    0,    0,   79,   80,
   81,   82,    0,   49,   50,   51,    0,    0,    0,   52,
    0,    0,    0,    0,   53,    0,   83,   84,   85,   86,
   87,   88,   89,   90,   91,    0,    0,    0,    0,    0,
   54,   55,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   56,   57,   58,   59,   60,   61,   62,
   63,   64,   65,   66,   67,    0,    0,    0,    0,    0,
   68,   69,   70,   71,   72,   73,   74,   75,   76,   77,
   78,    0,    0,   79,   80,   81,   82,   49,   50,   51,
    0,    0,    0,   52,    0,    0,    0,    0,   53,    0,
    0,   83,   84,   85,   86,   87,   88,   89,   90,   91,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   56,   57,   58,
   59,   60,   61,   62,   63,   64,   65,   66,   67,    0,
    0,    0,    0,    0,   68,   69,   70,   71,   72,   73,
   74,   75,   76,   77,   78,    0,    0,   79,   80,   81,
   82,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   83,   84,   85,   86,   87,
   88,   89,   90,   91,
};
static const short yycheck[] = {                         25,
    0,   41,  105,   29,   43,   31,   45,   44,    0,   59,
   43,   37,   45,  125,   37,  100,  260,  284,  285,   42,
   43,  260,   45,   37,   47,  257,  258,  107,   42,   43,
   44,   45,   59,   47,   43,  102,   45,   60,   92,   62,
  120,   41,   58,    4,   44,   61,   60,   58,   62,   41,
  284,  285,   44,   62,  260,  167,   43,   25,   45,   59,
  349,  350,  268,   31,   25,   61,   92,   59,   94,   95,
   31,   94,  258,  140,   41,   62,   37,   44,   96,  258,
   94,  107,    0,   41,   40,  111,   44,  141,  355,  356,
   37,  111,  348,   93,  120,   42,   43,  336,   45,   96,
   47,   93,    0,  129,  130,  131,  132,  133,  134,  135,
  136,  137,  138,  139,  140,  141,  351,  352,  144,  145,
  146,  355,  356,    0,   92,  125,   43,   44,   45,  155,
  156,  375,   61,  125,  160,  161,  221,  336,   36,  107,
   43,  167,   45,   37,   42,   37,  107,   94,   42,   43,
   42,   45,  120,   47,  262,   47,  275,  118,   40,  120,
  279,   41,   40,   43,  125,   45,   60,   40,   62,  137,
  138,  139,  140,  276,  277,   93,  230,  231,   40,  205,
  206,  207,  208,  209,  210,  211,  212,  213,  214,  215,
  216,  217,  218,  219,  220,  280,  157,  158,  159,  167,
   94,   40,   94,   40,  230,  231,  167,  125,  275,    0,
  121,  122,  279,   40,   40,  282,   93,   40,   40,  245,
   40,  258,  248,  249,  250,  279,  252,  253,  248,  249,
   37,  285,  252,  253,  291,   42,   43,  260,   45,  257,
   47,  260,   33,   61,  212,  263,   27,  262,  125,   40,
  268,  258,  220,  279,   45,  374,  375,   41,    0,  285,
  257,   41,   43,   43,  264,   45,  263,  306,   41,  264,
  373,  268,  264,  306,  328,  329,   43,   44,   45,  319,
  320,  321,  322,  323,  302,   94,  303,   94,    0,  408,
   46,  291,  411,  254,  255,  407,  322,  323,  259,  291,
   91,  327,  328,  329,  257,   96,   93,  374,  375,  125,
  302,  279,   93,  305,   43,   44,   45,   59,   93,    0,
   43,   44,   45,    0,  262,  257,  349,  350,  351,  352,
  353,  354,  123,   41,  262,  349,  350,  351,  352,  353,
  354,  408,   41,   44,  411,   41,   41,   59,    0,  349,
  350,   93,  375,   41,  322,  323,   41,  349,  350,  327,
   44,   37,   44,   41,    0,    0,   42,   43,   44,   45,
   41,   47,    0,  304,  349,  401,  402,  403,    0,  405,
   44,   93,   59,  125,   60,  257,   62,  262,  169,   41,
   41,  365,   44,  419,  420,  176,  177,  178,  179,  180,
  181,  182,  183,  184,  185,  186,   41,   59,   41,   44,
   91,  260,  305,  125,   41,  441,   93,   41,   94,   41,
  446,   41,   44,   59,   59,   43,   44,   45,   41,   41,
   37,   59,  346,  401,  402,   42,   43,   59,   45,    0,
   47,   93,  123,   43,   44,   45,  407,   41,  125,  262,
  260,  419,  420,   60,   44,   62,  346,   93,   93,  353,
  354,   43,   44,   45,  167,   93,  257,  258,  259,  260,
  261,   93,  263,  125,   43,   44,   45,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  346,   94,  279,  125,
  125,  282,  283,  284,  285,  302,  346,  125,  305,   46,
  413,   31,   36,  125,  319,  320,  321,  322,  323,  195,
   46,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,   -1,   -1,
   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,  330,
  331,  332,  333,  334,  335,   -1,  337,  338,  339,  340,
  341,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,
  361,  362,  363,  364,    0,  366,  257,  258,   -1,  260,
  261,   -1,   -1,   -1,  375,  376,    0,   -1,  269,  270,
  271,  272,  273,  274,  275,  276,    0,   -1,  279,   -1,
   -1,  282,  283,  284,  285,  386,   -1,   33,   -1,  390,
  391,   37,  264,   -1,   40,   41,   42,   43,   44,   45,
   -1,   47,   -1,   -1,   -1,    0,   -1,   41,   -1,  264,
   44,   -1,    0,   59,   60,   -1,   62,   -1,   -1,  291,
   -1,   -1,  264,   -1,   -1,   59,   -1,   -1,   -1,   -1,
  302,   -1,   -1,  305,  335,   59,  291,   -1,    0,   -1,
  341,  342,   -1,    0,  345,   -1,  347,   93,   -1,  291,
   96,   -1,   -1,  349,  350,  351,  352,  353,  354,   93,
  287,   -1,   -1,  364,   59,  366,   -1,   -1,   -1,   93,
   -1,   59,   -1,    0,  375,  376,   -1,   -1,  350,  125,
   -1,   43,   -1,   45,   -1,   -1,   43,   -1,   45,   -1,
   -1,  125,   -1,   -1,   -1,  350,   -1,   59,   93,   -1,
   -1,  125,   59,   -1,   -1,   93,   33,   -1,  350,   -1,
   37,   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,
   47,   -1,  349,  350,  351,  352,  353,  354,  284,  285,
  125,   93,   59,   60,   -1,   62,   93,  125,   -1,   -1,
   -1,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  308,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  125,   -1,   -1,   93,   -1,  125,   96,
  337,  338,  339,  340,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  337,  338,  339,  340,   -1,   -1,   -1,  355,  356,
  357,  358,  359,  360,  361,  362,  363,   -1,  125,  355,
  356,  357,  358,  359,  360,  361,  362,  363,   -1,   -1,
   -1,  257,  258,  259,  260,   -1,   -1,  263,  264,  265,
  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  264,  277,  278,   -1,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,  302,  291,   -1,  305,
  306,  307,  308,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,
  326,  327,  328,  329,  330,  331,  332,  333,  334,   -1,
   91,  337,  338,  339,  340,   46,   -1,  343,  344,   -1,
  346,   -1,   -1,  349,  350,  351,  352,  353,  354,  355,
  356,  357,  358,  359,  360,  361,  362,  363,   -1,   -1,
   -1,  367,  368,  369,  370,  371,  372,  373,  374,  375,
  257,  258,  259,  260,   -1,   -1,  263,  264,  265,  266,
  267,  268,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,
  277,  278,   -1,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,  302,   -1,   -1,  305,  306,
  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,   -1,   -1,    0,   -1,   -1,  324,  325,  326,
  327,  328,  329,  330,  331,  332,  333,  334,   -1,   -1,
  337,  338,  339,  340,   -1,   -1,  343,  344,    0,  346,
   -1,   -1,  349,  350,  351,  352,  353,  354,  355,  356,
  357,  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,
  367,  368,  369,  370,  371,  372,  373,  374,  375,   -1,
   -1,   33,   -1,   59,   -1,   37,   -1,   -1,   40,   41,
   42,   43,   44,   45,   -1,   47,   -1,   91,  269,  270,
  271,  272,  273,  274,   -1,  276,   -1,   59,   60,   -1,
   62,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   -1,   -1,   -1,   -1,
   42,   43,   44,   45,   -1,   47,   -1,   -1,   -1,   -1,
   -1,   93,   -1,  260,   96,   -1,   -1,   -1,   60,  125,
   62,  268,  269,  270,  271,  272,  273,  274,   -1,  276,
   -1,   -1,   -1,  284,  285,   -1,   -1,    0,   -1,   -1,
   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   94,   -1,   -1,   -1,   -1,  308,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,   -1,   -1,
   33,   -1,   -1,   -1,   37,   -1,   -1,   40,   41,   42,
   43,   44,   45,   -1,   47,   -1,  337,  338,  339,  340,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   60,   -1,   62,
   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,
  361,  362,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,   -1,   96,   37,   -1,  260,   -1,   -1,   42,
   43,   -1,   45,   -1,   47,  269,  270,  271,  272,  273,
  274,   -1,  276,   -1,   -1,   -1,   -1,   60,   -1,   62,
   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,   -1,
   -1,  263,  264,  265,  266,  267,  268,   -1,   -1,   -1,
   -1,   94,   -1,   -1,   -1,  277,  278,   -1,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
  302,   -1,   -1,  305,  306,  307,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,   -1,   -1,   -1,
   -1,   -1,  324,  325,  326,  327,  328,  329,  330,  331,
  332,  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,
  302,  343,  344,  305,  346,   -1,   -1,  349,  350,  351,
  352,  353,  354,  355,  356,  357,  358,  359,  360,  361,
  362,  363,   -1,   -1,   -1,  367,  368,  369,  370,  371,
  372,  373,  374,  375,  257,  258,  259,  260,   -1,   -1,
  263,  264,  265,  266,  267,  268,   -1,  349,  350,  351,
  352,  353,  354,   -1,  277,  278,   -1,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,  302,
   -1,   -1,  305,  306,  307,  308,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,
   -1,  324,  325,  326,  327,  328,  329,  330,  331,  332,
  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,   -1,
  343,  344,    0,  346,   -1,   -1,  349,  350,  351,  352,
  353,  354,  355,  356,  357,  358,  359,  360,  361,  362,
  363,   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,
  373,  374,  375,   -1,   -1,   33,   -1,   -1,   -1,   37,
   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
   -1,   59,   60,   -1,   62,   -1,  349,  350,  351,  352,
  353,  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,
   -1,   -1,   -1,   -1,   42,   43,   44,   45,   -1,   47,
   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,
   41,   -1,   60,   44,   62,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,
   -1,    0,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   33,   -1,   -1,   -1,   37,   -1,
   -1,   40,   41,   42,   43,   44,   45,   -1,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   60,   -1,   62,  125,   -1,   -1,   -1,   37,   -1,
   -1,   -1,   -1,   42,   43,   -1,   45,   -1,   47,   -1,
   37,   -1,   -1,   -1,   -1,   42,   43,   -1,   45,   -1,
   47,   60,   -1,   62,   93,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   60,   37,   62,   -1,   -1,   -1,   42,
   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   94,  125,   60,   -1,   62,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,  257,
  258,  259,  260,   -1,   -1,  263,  264,  265,  266,  267,
  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,
  278,   94,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,  302,   -1,   -1,  305,  306,  307,
  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,   -1,   -1,  264,   -1,   -1,  324,  325,  326,  327,
  328,  329,  330,  331,  332,  333,  334,   -1,   -1,  337,
  338,  339,  340,   -1,  302,  343,  344,  305,  346,   -1,
  291,  349,  350,  351,  352,  353,  354,  355,  356,  357,
  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,
  368,  369,  370,  371,  372,  373,  374,  375,  257,  258,
  259,  260,   -1,   -1,  263,  264,  265,  266,  267,  268,
   -1,  349,  350,  351,  352,  353,  354,   -1,  277,  278,
   -1,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,  302,   -1,   -1,  305,  306,  307,  308,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
   -1,  290,   -1,   -1,   -1,  324,  325,  326,  327,  328,
  329,  330,  331,  332,  333,  334,   -1,   -1,  337,  338,
  339,  340,   -1,   -1,  343,  344,    0,  346,   -1,   -1,
  349,  350,  351,  352,  353,  354,  355,  356,  357,  358,
  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,
  369,  370,  371,  372,  373,  374,  375,   -1,   -1,   33,
  349,  350,  351,  352,  353,  354,   40,   41,   -1,   43,
   44,   45,  349,  350,  351,  352,  353,  354,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   60,   -1,   62,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  349,   -1,  351,  352,
  353,  354,   -1,   37,   -1,   -1,   -1,   -1,   42,   43,
   44,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   96,   -1,   -1,   -1,   60,   -1,   62,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,
   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   41,   -1,   43,   44,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   60,   -1,   62,   -1,   -1,
   37,   -1,   -1,   -1,   -1,   42,   43,   -1,   45,   -1,
   47,   37,   -1,   -1,   -1,   -1,   42,   43,   -1,   45,
   -1,   47,   -1,   60,   -1,   62,   -1,   -1,   93,   -1,
   -1,   96,   -1,   -1,   60,   -1,   62,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,
  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,   -1,   -1,  263,
  264,  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,  302,   -1,
   -1,  305,  306,  307,  308,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,
  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,   -1,   -1,  337,  338,  339,  340,   -1,  302,  343,
  344,  305,  346,   -1,   -1,  349,  350,  351,  352,  353,
  354,  355,  356,  357,  358,  359,  360,  361,  362,  363,
   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,  373,
  374,  375,  257,  258,  259,  260,   -1,   -1,  263,  264,
  265,  266,  267,  268,   -1,  349,  350,  351,  352,  353,
  354,   -1,  277,  278,   -1,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,   -1,   -1,
  305,  306,  307,  308,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,
  325,  326,  327,  328,  329,  330,  331,  332,  333,  334,
   -1,   -1,  337,  338,  339,  340,   -1,   -1,  343,  344,
    0,  346,   -1,   -1,  349,  350,  351,  352,  353,  354,
  355,  356,  357,  358,  359,  360,  361,  362,  363,   -1,
   -1,   -1,  367,  368,  369,  370,  371,  372,  373,  374,
  375,   -1,  349,   33,  351,  352,  353,  354,   -1,   -1,
   40,   41,   -1,   -1,   44,  351,  352,  353,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   60,   -1,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,
  338,  339,  340,   -1,   -1,   -1,   -1,   -1,   -1,    0,
   -1,   -1,   -1,   -1,   -1,  125,   -1,  355,  356,  357,
  358,  359,  360,  361,  362,  363,   -1,   -1,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   59,   60,
   -1,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,   -1,  263,  264,  265,  266,  267,  268,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,  302,   -1,   -1,  305,  306,  307,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,   -1,
   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,
  330,  331,  332,  333,  334,   -1,  257,  337,  338,  339,
  340,   -1,  263,  343,  344,   -1,  346,  268,   -1,  349,
  350,  351,  352,  353,  354,  355,  356,  357,  358,  359,
  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,
  370,  371,  372,  373,  374,  375,  257,  258,  259,  260,
   -1,  302,  263,  264,  265,  266,  267,  268,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,  302,   -1,   -1,  305,  306,  307,  308,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,   -1,   -1,
   -1,    0,   -1,  324,  325,  326,  327,  328,  329,  330,
  331,  332,  333,  334,   -1,   -1,  337,  338,  339,  340,
   -1,   -1,  343,  344,    0,  346,   -1,   -1,  349,  350,
  351,  352,  353,  354,  355,  356,  357,  358,  359,  360,
  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,  370,
  371,  372,  373,  374,  375,   -1,   -1,   33,   -1,   -1,
   59,   -1,   -1,   -1,   40,   41,   -1,   -1,   44,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   60,   -1,   62,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,
   96,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   41,   -1,   -1,   44,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   60,   -1,   62,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,   -1,
   -1,   -1,   -1,   -1,  263,   -1,   -1,   -1,  125,  268,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,   -1,   -1,  263,  264,  265,
  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,  302,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,  302,   -1,   -1,  305,
  306,  307,  308,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,
  326,  327,  328,  329,  330,  331,  332,  333,  334,   -1,
   -1,  337,  338,  339,  340,   -1,   -1,  343,  344,   -1,
  346,   -1,   -1,  349,  350,  351,  352,  353,  354,  355,
  356,  357,  358,  359,  360,  361,  362,  363,   -1,   -1,
   -1,  367,  368,  369,  370,  371,  372,  373,  374,  375,
  257,  258,  259,  260,   -1,   -1,  263,  264,  265,  266,
  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,   -1,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,  302,   -1,   -1,  305,  306,
  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,
  327,  328,  329,  330,  331,  332,  333,  334,   -1,   -1,
  337,  338,  339,  340,   -1,   -1,  343,  344,    0,  346,
   -1,   -1,  349,  350,  351,  352,  353,  354,  355,  356,
  357,  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,
  367,  368,  369,  370,  371,  372,  373,  374,  375,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   41,
   -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,
   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,
   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,
   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   41,   -1,
   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,
   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   41,   -1,
   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,  125,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,   -1,
   -1,  263,   -1,  265,  266,  267,  268,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
   -1,   -1,   -1,   -1,  306,  307,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
  322,  323,  324,  325,  326,  327,  328,  329,  330,  331,
  332,  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,
   -1,  343,  344,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  264,   -1,  355,  356,  357,  358,  359,  360,  361,
  362,  363,   -1,   -1,   -1,  367,  368,  369,  370,  371,
  372,  373,  374,  375,  257,  258,  259,  260,  291,   -1,
  263,  264,  265,  266,  267,  268,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,  302,
   -1,   -1,  305,  306,  307,  308,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,   -1,  350,   -1,   -1,
   -1,  324,  325,  326,  327,  328,  329,  330,  331,  332,
  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,   -1,
  343,  344,    0,  346,   -1,   -1,  349,  350,  351,  352,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,  362,
  363,   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,
  373,  374,  375,   -1,   -1,   33,   -1,   -1,   -1,   -1,
   -1,   -1,   40,   41,   -1,   -1,   44,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,    0,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,
   -1,   40,   41,   -1,   43,   44,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   62,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,   -1,   -1,  263,  264,  265,  266,  267,
  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,
  278,   -1,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,  302,   -1,   -1,  305,  306,  307,
  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,
  328,  329,  330,  331,  332,  333,  334,   -1,   -1,  337,
  338,  339,  340,   -1,   -1,  343,  344,   -1,  346,   -1,
   -1,  349,  350,  351,  352,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,
  368,  369,  370,  371,  372,  373,  374,  375,  257,  258,
  259,  260,   -1,   -1,  263,   -1,  265,  266,  267,  268,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,
   -1,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,   -1,   -1,   -1,  306,  307,  308,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,  322,  323,  324,  325,  326,  327,  328,
  329,  330,  331,  332,  333,  334,   -1,   -1,  337,  338,
  339,  340,   -1,   -1,  343,  344,    0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,
  369,  370,  371,  372,  373,  374,  375,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   41,   -1,   -1,
   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,
   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   41,   -1,   -1,   44,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,   -1,   -1,  263,
  264,  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,  302,   -1,
   -1,  305,  306,  307,  308,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,
  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,   -1,   -1,  337,  338,  339,  340,   -1,   -1,  343,
  344,   -1,  346,   -1,   -1,  349,  350,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,  362,  363,
   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,  373,
  374,  375,  257,  258,  259,  260,   -1,   -1,  263,  264,
  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,   -1,   -1,
  305,  306,  307,  308,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,
  325,  326,  327,  328,  329,  330,  331,  332,  333,  334,
   -1,   -1,  337,  338,  339,  340,   -1,   -1,  343,  344,
    0,  346,   -1,   -1,   -1,  350,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,  361,  362,  363,   -1,
   -1,   -1,  367,  368,  369,  370,  371,  372,  373,  374,
  375,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,
   40,   41,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,
   -1,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,   -1,  263,   -1,  265,  266,  267,  268,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,   -1,   -1,   -1,  306,  307,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,   59,
   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,
  330,  331,  332,  333,  334,   -1,   -1,  337,  338,  339,
  340,   -1,   -1,  343,  344,   -1,   -1,   -1,   -1,   -1,
   -1,   91,   -1,   -1,   -1,  355,  356,  357,  358,  359,
  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,
  370,  371,  372,  373,  374,  375,  257,  258,  259,  260,
   -1,   -1,  263,  123,  265,  266,  267,  268,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,   -1,   -1,   -1,  306,  307,  308,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,   -1,   -1,
   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,  330,
  331,  332,  333,  334,   -1,   -1,  337,  338,  339,  340,
   -1,   -1,  343,  344,    0,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,
  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,  370,
  371,  372,  373,  374,  375,   -1,   -1,   33,   -1,   -1,
   -1,   -1,   -1,   -1,   40,   41,   -1,   -1,   44,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,   -1,
  260,  261,   -1,   59,   -1,   -1,   -1,   -1,   -1,  269,
  270,  271,  272,  273,  274,  275,  276,   -1,   -1,  279,
   -1,   -1,  282,  283,  284,  285,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,
   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,  125,
   -1,   -1,   -1,   -1,   -1,  335,   -1,   -1,   -1,   -1,
   -1,  341,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   -1,   -1,   40,  364,   -1,  366,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  375,  376,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,   -1,   -1,  263,   -1,  265,
  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,   -1,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,   -1,   -1,   -1,
  306,  307,  308,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,
  326,  327,  328,  329,  330,  331,  332,  333,  334,   -1,
   -1,  337,  338,  339,  340,   -1,   -1,  343,  344,   -1,
   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,  355,
  356,  357,  358,  359,  360,  361,  362,  363,   -1,   -1,
   -1,  367,  368,  369,  370,  371,  372,  373,  374,  375,
  257,  258,  259,  260,   -1,  123,  263,   -1,  265,  266,
  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,   -1,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,   -1,   -1,   -1,   -1,   -1,
  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,
  327,  328,  329,  330,  331,  332,  333,  334,   -1,   -1,
  337,  338,  339,  340,   -1,   -1,  343,  344,    0,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,
  357,  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,
  367,  368,  369,  370,  371,  372,  373,  374,  375,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,   -1,  260,  261,   -1,   -1,   -1,   59,   -1,   -1,
   -1,  269,  270,  271,  272,  273,  274,  275,  276,   -1,
   -1,  279,   -1,   -1,  282,  283,  284,  285,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,
   -1,   -1,   -1,  125,   -1,   -1,   -1,  335,   -1,   -1,
   -1,   -1,   -1,  341,  342,   -1,   -1,  345,   -1,  347,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   -1,   -1,   -1,   -1,  364,   40,  366,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,  376,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,   -1,
   -1,  263,   -1,  265,  266,  267,  268,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
   -1,   -1,   -1,   -1,   -1,  307,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,   -1,   -1,   -1,
   -1,   -1,  324,  325,  326,  327,  328,  329,  330,  331,
  332,  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,
   -1,  343,  344,   -1,   -1,   -1,   -1,   91,   -1,   -1,
   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,  361,
  362,  363,   -1,   -1,   -1,  367,  368,  369,  370,  371,
  372,  373,  374,  375,  257,  258,  259,  260,   -1,  123,
  263,   -1,  265,  266,  267,  268,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
   -1,   -1,   -1,   -1,  307,  308,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,
   -1,  324,  325,  326,  327,  328,  329,  330,  331,  332,
  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,   -1,
  343,  344,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,  362,
  363,   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,
  373,  374,  375,   -1,   -1,   33,   -1,   -1,   -1,   -1,
   -1,   -1,   40,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,   -1,  260,  261,   -1,   -1,
   -1,   59,   -1,   -1,   -1,  269,  270,  271,  272,  273,
  274,  275,  276,   -1,   -1,  279,   -1,   -1,  282,  283,
  284,  285,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,    0,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,
   -1,  335,   -1,   -1,   -1,   -1,   -1,  341,  342,   -1,
   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,
  364,   40,  366,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  375,  376,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,   -1,   -1,  263,   -1,  265,  266,  267,
  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,
  278,   -1,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,   -1,   -1,   -1,   -1,   -1,  307,
  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,
  328,  329,  330,  331,  332,  333,  334,   -1,   -1,  337,
  338,  339,  340,   -1,   -1,  343,  344,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,
  368,  369,  370,  371,  372,  373,  374,  375,  257,  258,
  259,  260,   -1,   -1,  263,   -1,  265,  266,  267,  268,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,
   -1,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,   -1,   -1,   -1,   -1,  307,  308,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,
  329,  330,  331,  332,  333,  334,   -1,   -1,  337,  338,
  339,  340,   -1,   -1,  343,  344,    0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,
  369,  370,  371,  372,  373,  374,  375,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,
   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,   -1,   -1,  263,
   -1,  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,   -1,   -1,
   -1,   -1,   -1,  307,  308,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,
  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,   -1,   -1,  337,  338,  339,  340,   -1,   -1,  343,
  344,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,  362,  363,
   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,  373,
  374,  375,  257,  258,  259,  260,   -1,   -1,  263,   -1,
  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,   -1,   -1,   -1,
   -1,   -1,  307,  308,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,
  325,  326,  327,  328,  329,  330,  331,  332,  333,  334,
   -1,   -1,  337,  338,  339,  340,   -1,   -1,  343,  344,
    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,  361,  362,  363,   -1,
   -1,   -1,  367,  368,  369,  370,  371,  372,  373,  374,
  375,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,
   40,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,   -1,  263,   -1,  265,  266,  267,  268,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,   -1,
   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,
  330,  331,  332,  333,  334,   -1,   -1,  337,  338,  339,
  340,   -1,   -1,  343,  344,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,
  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,
  370,  371,  372,  373,  374,  375,  257,  258,  259,  260,
   -1,   -1,  263,   -1,  265,  266,  267,  268,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,   -1,   -1,
   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,  330,
  331,  332,  333,  334,   -1,   -1,  337,  338,  339,  340,
   -1,   -1,  343,  344,    0,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,
  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,  370,
  371,  372,  373,  374,  375,   -1,   -1,   33,   -1,   -1,
   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,
   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,   -1,   -1,  263,   -1,  265,
  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,   -1,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,   -1,   -1,   -1,
   -1,  307,  308,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,
  326,  327,  328,  329,  330,  331,  332,  333,  334,   -1,
   -1,  337,  338,  339,  340,   -1,   -1,  343,  344,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  355,
  356,  357,  358,  359,  360,  361,  362,  363,   -1,   -1,
   -1,  367,  368,  369,  370,  371,  372,  373,  374,  375,
  257,  258,  259,  260,   -1,   -1,  263,   -1,  265,  266,
  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,   -1,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,   -1,   -1,   -1,   -1,   -1,
  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,
  327,  328,  329,  330,  331,  332,  333,  334,   -1,   -1,
  337,  338,  339,  340,   -1,   -1,  343,  344,    0,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,
  357,  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,
  367,  368,  369,  370,  371,  372,  373,  374,  375,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,
   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,   -1,
   -1,  263,   -1,  265,  266,  267,  268,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
   -1,   -1,   -1,   -1,   -1,  307,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,   -1,   -1,   -1,
   -1,   -1,  324,  325,  326,  327,  328,  329,  330,  331,
  332,  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,
   -1,  343,  344,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,  361,
  362,  363,   -1,   -1,   -1,  367,  368,  369,  370,  371,
  372,  373,  374,  375,  257,  258,  259,  260,   -1,   -1,
  263,   -1,  265,  266,  267,  268,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
   -1,   -1,   -1,   -1,  307,  308,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,
   -1,  324,  325,  326,  327,  328,  329,  330,  331,  332,
  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,   -1,
  343,  344,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,  362,
  363,   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,
  373,  374,  375,   -1,   -1,   33,   -1,   -1,   -1,   -1,
   -1,   -1,   40,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,    0,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,
   -1,   40,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,   -1,   -1,  263,   -1,  265,  266,  267,
  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,
  278,   -1,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,   -1,   -1,   -1,   -1,   -1,  307,
  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,
  328,  329,  330,  331,  332,  333,  334,   -1,   -1,  337,
  338,  339,  340,   -1,   -1,  343,  344,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,
  368,  369,  370,  371,  372,  373,  374,  375,  257,  258,
  259,  260,   -1,   -1,  263,   -1,  265,  266,  267,  268,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,
   -1,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,   -1,   -1,   -1,   -1,  307,  308,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,
  329,  330,  331,  332,  333,  334,   -1,   -1,  337,  338,
  339,  340,   -1,   -1,  343,  344,    0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,
  369,  370,  371,  372,  373,  374,  375,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,
   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,   -1,   -1,  263,
   -1,  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,   -1,   -1,
   -1,   -1,   -1,  307,  308,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,
  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,   -1,   -1,  337,  338,  339,  340,   -1,   -1,  343,
  344,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,  362,  363,
   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,  373,
  374,  375,  257,  258,  259,  260,   -1,   -1,  263,   -1,
  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,   -1,   -1,   -1,
   -1,   -1,  307,  308,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,
  325,  326,  327,  328,  329,  330,  331,  332,  333,  334,
   -1,   -1,  337,  338,  339,  340,   -1,   -1,  343,  344,
    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,  361,  362,  363,   -1,
   -1,   -1,  367,  368,  369,  370,  371,  372,  373,  374,
  375,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,
   40,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,   -1,  263,   -1,  265,  266,  267,  268,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,   -1,
   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,
  330,  331,  332,  333,  334,   -1,   -1,  337,  338,  339,
  340,   -1,   -1,  343,  344,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,
  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,
  370,  371,  372,  373,  374,  375,  257,  258,  259,  260,
   -1,   -1,  263,   -1,  265,  266,  267,  268,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,   -1,   -1,
   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,  330,
  331,  332,  333,  334,   -1,   -1,  337,  338,  339,  340,
   -1,   -1,  343,  344,    0,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,
  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,  370,
  371,  372,  373,  374,  375,   -1,   -1,   33,   -1,   -1,
   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,
   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,
   -1,   -1,   40,   -1,   -1,   -1,   44,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,   -1,   -1,  263,   -1,  265,
  266,  267,  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,   -1,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,   -1,   -1,   -1,   -1,
   -1,  307,  308,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,
  326,  327,  328,  329,  330,  331,  332,  333,  334,   -1,
   -1,  337,  338,  339,  340,   -1,   -1,  343,  344,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  355,
  356,  357,  358,  359,  360,  361,  362,  363,   -1,   -1,
   -1,  367,  368,  369,  370,  371,  372,  373,  374,  375,
  258,  259,  260,   -1,   -1,   -1,   -1,  265,  266,  267,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,
  278,   -1,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,   -1,   -1,   -1,   -1,   -1,  307,
  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,
  328,  329,  330,  331,  332,  333,  334,   -1,   -1,  337,
  338,  339,  340,   -1,   -1,  343,  344,    0,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   92,   -1,  355,  356,  357,
  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,  367,
  368,  369,  370,  371,  372,  373,  374,  375,   -1,   -1,
   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   41,   -1,
   43,   44,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  137,  138,  139,  140,   -1,   -1,   59,   -1,   -1,   62,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  167,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,
   -1,   -1,  125,   -1,   -1,  212,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  220,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   43,
   -1,   45,   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  322,  323,   -1,   -1,   -1,
  327,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  257,  258,  259,  260,   -1,   -1,
  263,   -1,  265,  266,  267,  268,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
   -1,   -1,   -1,  306,  307,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  401,  402,  319,  320,  321,  322,
  323,  324,  325,  326,  327,  328,  329,  330,  331,  332,
  333,  334,  419,  420,   -1,   -1,   -1,   -1,   -1,   -1,
  343,  344,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,
  373,  374,  375,  257,  258,  259,  260,   -1,   -1,  263,
   -1,  265,  266,  267,  268,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  297,  298,  299,  300,  301,   -1,   -1,
   -1,    0,   -1,  307,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  319,  320,  321,  322,  323,
  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,  343,
  344,   40,   41,   -1,   -1,   44,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,  367,  368,  369,  370,  371,  372,  373,
  374,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   41,   -1,   -1,   44,   -1,   -1,  125,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   60,
   -1,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   96,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,  257,  258,
  259,  260,   -1,   -1,  263,   -1,  265,  266,  267,  268,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,  277,  278,
   -1,  280,  281,  282,  283,   -1,   -1,  286,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   -1,   -1,   -1,   -1,   -1,  307,   93,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,
  329,  330,  331,  332,  333,  334,  257,  258,  259,  260,
   -1,  125,  263,   -1,  343,  344,   -1,  268,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  284,  285,   -1,   -1,   -1,  367,  368,
  369,  370,  371,  372,  373,  374,  375,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,   -1,   -1,
   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,  330,
  331,  332,  333,  334,   59,   -1,  337,  338,  339,  340,
   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,  349,  350,
  351,  352,  353,  354,  355,  356,  357,  358,  359,  360,
  361,  362,  363,   -1,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,   -1,   -1,  263,
  125,   -1,   -1,   -1,  268,   59,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  284,  285,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   96,  307,  308,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,   -1,   -1,    0,   -1,   -1,
  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,  125,   -1,  337,  338,  339,  340,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,  362,  363,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  375,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  260,   -1,   -1,   -1,   -1,
  265,  266,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,  277,  278,   -1,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,   -1,   -1,
   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,    0,   -1,  263,
   -1,   -1,   -1,   -1,  268,   -1,   -1,   -1,  343,  344,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  284,  285,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  367,  368,  369,  370,  371,  372,  373,  374,
  375,   -1,   -1,  307,  308,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,   -1,   59,   -1,   -1,   -1,
  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,   -1,   -1,  337,  338,  339,  340,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,  355,  356,  357,  358,  359,  360,  361,  362,  363,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  260,   -1,   -1,
   -1,  375,  265,  266,  267,    0,   -1,   -1,   -1,   -1,
   -1,   -1,  125,   -1,  277,  278,   -1,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,  302,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  343,  344,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,
  373,  374,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  260,   -1,   -1,
   -1,   -1,  265,  266,  267,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,   -1,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,  297,  298,  299,  300,  301,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  343,  344,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  367,  368,  369,  370,  371,  372,
  373,  374,  375,    0,  125,  260,   -1,   -1,   -1,   -1,
  265,  266,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  343,  344,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  367,  368,  369,  370,  371,  372,  373,  374,
  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,
   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  260,
   -1,   -1,   -1,   -1,  265,  266,  267,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  343,  344,   93,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  367,  368,  369,  370,
  371,  372,  373,  374,  375,    0,  125,   -1,   -1,   -1,
   -1,   -1,   -1,  260,   -1,   -1,   -1,   -1,  265,  266,
  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,   -1,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  343,  344,   93,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  367,  368,  369,  370,  371,  372,  373,  374,  375,   -1,
  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  260,   -1,   -1,   -1,   -1,  265,  266,  267,   -1,
    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,
   -1,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,   33,   -1,   -1,   -1,   -1,   -1,   -1,
   40,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,
   -1,   -1,   -1,   -1,  343,  344,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   96,   -1,  367,  368,
  369,  370,  371,  372,  373,  374,  375,   -1,   -1,   -1,
   43,   -1,   45,   46,   -1,  260,   -1,   -1,   -1,   -1,
  265,  266,  267,   -1,   -1,  125,   59,   -1,   -1,   -1,
   -1,   -1,  277,  278,   -1,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,   -1,   -1,   -1,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,  343,  344,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  367,  368,  369,  370,  371,  372,  373,  374,
  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
   -1,   -1,   -1,  263,   -1,  265,  266,  267,  268,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,   -1,
   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,
  330,  331,  332,  333,  334,   -1,   -1,  337,  338,  339,
  340,   -1,   -1,  343,  344,   -1,   -1,   -1,   -1,   -1,
   -1,  284,  285,   -1,    0,  355,  356,  357,  358,  359,
  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,
  370,  371,  372,  373,  374,  308,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,  322,
  323,   37,   -1,   -1,   -1,   41,   42,   43,   44,   45,
   -1,   47,   -1,   -1,  337,  338,  339,  340,   -1,   -1,
   -1,   -1,   -1,   59,   60,   -1,   62,   -1,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,  362,
  363,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   -1,   93,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  291,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  302,   -1,   -1,  305,
  257,  258,  259,  260,  261,   -1,  263,   -1,   -1,   -1,
   -1,  268,  269,  270,  271,  272,  273,  274,  275,  276,
   -1,   -1,  279,   33,   -1,  282,  283,  284,  285,   -1,
   40,   -1,   -1,   -1,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  349,  350,  351,  352,  353,  354,   -1,
  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,
  327,  328,  329,  330,  331,  332,  333,  334,  335,   -1,
  337,  338,  339,  340,  341,  342,   96,   -1,  345,   -1,
  347,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,
  357,  358,  359,  360,  361,  362,  363,  364,   -1,  366,
  257,  258,  259,  260,  261,   -1,  263,   -1,  375,  376,
   -1,  268,  269,  270,  271,  272,  273,  274,  275,  276,
   -1,   -1,  279,   -1,   -1,  282,  283,  284,  285,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   41,   -1,   -1,   -1,   45,   -1,   -1,   -1,   -1,   -1,
  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,
  327,  328,  329,  330,  331,  332,  333,  334,  335,   -1,
  337,  338,  339,  340,  341,  342,   -1,   -1,  345,   -1,
  347,   -1,   -1,   -1,   -1,   96,   -1,   -1,  355,  356,
  357,  358,  359,  360,  361,  362,  363,  364,   -1,  366,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,  376,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,   -1,  263,   -1,  265,  266,  267,  268,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,   -1,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,   -1,
   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,
  330,  331,  332,  333,  334,   33,   -1,  337,  338,  339,
  340,   -1,   40,  343,  344,   -1,   -1,   45,   46,   -1,
   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,
  360,  361,  362,  363,   -1,   -1,   -1,  367,  368,  369,
  370,  371,  372,  373,  374,  375,  257,  258,  259,  260,
   -1,   -1,  263,   -1,   -1,   -1,   -1,  268,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,  284,  285,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,   -1,   -1,
   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,  330,
  331,  332,  333,  334,   33,   -1,  337,  338,  339,  340,
   -1,   40,   -1,   -1,   -1,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,
  361,  362,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,   -1,   -1,  263,   -1,   -1,   -1,   -1,
  268,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  284,  285,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  307,
  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,
  328,  329,  330,  331,  332,  333,  334,   -1,   -1,  337,
  338,  339,  340,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,  257,  258,
  259,  260,   -1,   -1,  263,   -1,   -1,   -1,   -1,  268,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   33,   -1,  284,  285,   -1,   -1,   -1,
   40,   -1,   -1,   -1,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  307,  308,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,
  329,  330,  331,  332,  333,  334,   -1,   -1,  337,  338,
  339,  340,  257,  258,  259,  260,   96,   -1,  263,   -1,
   -1,   -1,   -1,  268,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,  362,  363,   -1,   -1,   33,   -1,  284,
  285,   -1,   -1,   -1,   40,   -1,  375,   -1,   -1,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  307,  308,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,
  325,  326,  327,  328,  329,  330,  331,  332,  333,  334,
   -1,   -1,  337,  338,  339,  340,   -1,   -1,   -1,   -1,
   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,  361,  362,  363,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,
  375,   -1,   -1,   45,   46,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,   -1,   -1,  263,   96,   -1,   -1,   -1,  268,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  284,  285,   33,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   42,   -1,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,   -1,
   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,
  330,  331,  332,  333,  334,   -1,   -1,  337,  338,  339,
  340,  257,  258,  259,  260,   -1,   -1,  263,   -1,   96,
   -1,   -1,  268,   -1,   -1,  355,  356,  357,  358,  359,
  360,  361,  362,  363,   -1,   -1,   -1,   -1,  284,  285,
   33,   -1,   -1,   -1,   -1,  375,   -1,   40,   -1,   -1,
   -1,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  307,  308,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,
  326,  327,  328,  329,  330,  331,  332,  333,  334,   -1,
   -1,  337,  338,  339,  340,  257,  258,  259,   -1,   -1,
   -1,  263,   -1,   96,   -1,   -1,  268,   -1,   -1,  355,
  356,  357,  358,  359,  360,  361,  362,  363,   -1,   -1,
   -1,   -1,  284,  285,   33,   -1,   -1,   -1,   -1,  375,
   -1,   40,   -1,   -1,   -1,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  307,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,   -1,   -1,   -1,
   -1,   -1,  324,  325,  326,  327,  328,  329,  330,  331,
  332,  333,  334,   -1,   -1,  337,  338,  339,  340,   -1,
  257,  258,  259,   -1,   -1,   -1,  263,   96,   -1,   -1,
   -1,  268,   -1,  355,  356,  357,  358,  359,  360,  361,
  362,  363,   -1,   -1,   -1,   -1,   -1,  284,  285,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,   -1,   -1,   -1,   -1,   -1,  324,  325,  326,
  327,  328,  329,  330,  331,  332,  333,  334,   -1,   -1,
  337,  338,  339,  340,  257,  258,  259,   -1,   -1,   -1,
  263,   -1,   96,   -1,   -1,  268,   -1,   -1,  355,  356,
  357,  358,  359,  360,  361,  362,  363,   -1,   -1,   -1,
   -1,  284,  285,   33,   -1,   -1,   -1,   -1,   -1,   -1,
   40,   -1,   -1,   -1,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  307,  308,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,
   -1,  324,  325,  326,  327,  328,  329,  330,  331,  332,
  333,  334,   -1,   -1,  337,  338,  339,  340,  257,  258,
  259,   -1,   -1,   -1,  263,   -1,   96,   -1,   -1,  268,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,  362,
  363,   -1,   -1,   -1,   -1,  284,  285,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  307,  308,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
   -1,   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,
  329,  330,  331,  332,  333,  334,   -1,   -1,  337,  338,
  339,  340,   -1,  257,  258,  259,   -1,   -1,   -1,  263,
   -1,   -1,   -1,   -1,  268,   -1,  355,  356,  357,  358,
  359,  360,  361,  362,  363,   -1,   -1,   -1,   -1,   -1,
  284,  285,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  307,  308,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,   -1,   -1,   -1,   -1,   -1,
  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,   -1,   -1,  337,  338,  339,  340,  257,  258,  259,
   -1,   -1,   -1,  263,   -1,   -1,   -1,   -1,  268,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,  362,  363,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  307,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,   -1,
   -1,   -1,   -1,   -1,  324,  325,  326,  327,  328,  329,
  330,  331,  332,  333,  334,   -1,   -1,  337,  338,  339,
  340,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,
  360,  361,  362,  363,
};
#define YYFINAL 2
#ifndef YYDEBUG
#define YYDEBUG 0
#endif
#define YYMAXTOKEN 378
#if YYDEBUG
static const char *yyname[] = {

"end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
"'!'",0,0,0,"'%'",0,0,"'('","')'","'*'","'+'","','","'-'","'.'","'/'",0,0,0,0,0,
0,0,0,0,0,"':'","';'","'<'","'='","'>'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,"'['",0,"']'","'^'",0,"'`'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,"'{'",0,"'}'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"LABEL","VARIABLE","NUMBER",
"TEXT","COMMAND_LINE","DELIMITED","ORDINAL","TH","LEFT_ARROW_HEAD",
"RIGHT_ARROW_HEAD","DOUBLE_ARROW_HEAD","LAST","BOX","CIRCLE","ELLIPSE","ARC",
"LINE","ARROW","MOVE","SPLINE","HEIGHT","RADIUS","FIGNAME","WIDTH","DIAMETER",
"UP","DOWN","RIGHT","LEFT","FROM","TO","AT","WITH","BY","THEN","SOLID","DOTTED",
"DASHED","CHOP","SAME","INVISIBLE","LJUST","RJUST","ABOVE","BELOW","OF","THE",
"WAY","BETWEEN","AND","HERE","DOT_N","DOT_E","DOT_W","DOT_S","DOT_NE","DOT_SE",
"DOT_NW","DOT_SW","DOT_C","DOT_START","DOT_END","DOT_X","DOT_Y","DOT_HT",
"DOT_WID","DOT_RAD","SIN","COS","ATAN2","LOG","EXP","SQRT","K_MAX","K_MIN",
"INT","RAND","SRAND","COPY","THRU","TOP","BOTTOM","UPPER","LOWER","SH","PRINT",
"CW","CCW","FOR","DO","IF","ELSE","ANDAND","OROR","NOTEQUAL","EQUALEQUAL",
"LESSEQUAL","GREATEREQUAL","LEFT_CORNER","RIGHT_CORNER","NORTH","SOUTH","EAST",
"WEST","CENTER","END","START","RESET","UNTIL","PLOT","THICKNESS","FILL",
"COLORED","OUTLINED","SHADED","XSLANTED","YSLANTED","ALIGNED","SPRINTF",
"COMMAND","DEFINE","UNDEF",
};
static const char *yyrule[] = {
"$accept : top",
"top : optional_separator",
"top : element_list",
"element_list : optional_separator middle_element_list optional_separator",
"middle_element_list : element",
"middle_element_list : middle_element_list separator element",
"optional_separator :",
"optional_separator : separator",
"separator : ';'",
"separator : separator ';'",
"placeless_element : FIGNAME '=' macro_name",
"placeless_element : VARIABLE '=' any_expr",
"placeless_element : VARIABLE ':' '=' any_expr",
"placeless_element : UP",
"placeless_element : DOWN",
"placeless_element : LEFT",
"placeless_element : RIGHT",
"placeless_element : COMMAND_LINE",
"placeless_element : COMMAND print_args",
"placeless_element : PRINT print_args",
"$$1 :",
"placeless_element : SH $$1 DELIMITED",
"placeless_element : COPY TEXT",
"$$2 :",
"$$3 :",
"placeless_element : COPY TEXT THRU $$2 DELIMITED $$3 until",
"$$4 :",
"$$5 :",
"placeless_element : COPY THRU $$4 DELIMITED $$5 until",
"$$6 :",
"placeless_element : FOR VARIABLE '=' expr TO expr optional_by DO $$6 DELIMITED",
"placeless_element : simple_if",
"$$7 :",
"placeless_element : simple_if ELSE $$7 DELIMITED",
"placeless_element : reset_variables",
"placeless_element : RESET",
"macro_name : VARIABLE",
"macro_name : LABEL",
"reset_variables : RESET VARIABLE",
"reset_variables : reset_variables VARIABLE",
"reset_variables : reset_variables ',' VARIABLE",
"print_args : print_arg",
"print_args : print_args print_arg",
"print_arg : expr",
"print_arg : text",
"print_arg : position",
"$$8 :",
"simple_if : IF any_expr THEN $$8 DELIMITED",
"until :",
"until : UNTIL TEXT",
"any_expr : expr",
"any_expr : text_expr",
"text_expr : text EQUALEQUAL text",
"text_expr : text NOTEQUAL text",
"text_expr : text_expr ANDAND text_expr",
"text_expr : text_expr ANDAND expr",
"text_expr : expr ANDAND text_expr",
"text_expr : text_expr OROR text_expr",
"text_expr : text_expr OROR expr",
"text_expr : expr OROR text_expr",
"text_expr : '!' text_expr",
"optional_by :",
"optional_by : BY expr",
"optional_by : BY '*' expr",
"element : object_spec",
"element : LABEL ':' optional_separator element",
"element : LABEL ':' optional_separator position_not_place",
"element : LABEL ':' optional_separator place",
"$$9 :",
"$$10 :",
"element : '{' $$9 element_list '}' $$10 optional_element",
"element : placeless_element",
"optional_element :",
"optional_element : element",
"object_spec : BOX",
"object_spec : CIRCLE",
"object_spec : ELLIPSE",
"object_spec : ARC",
"object_spec : LINE",
"object_spec : ARROW",
"object_spec : MOVE",
"object_spec : SPLINE",
"object_spec : text",
"object_spec : PLOT expr",
"object_spec : PLOT expr text",
"$$11 :",
"object_spec : '[' $$11 element_list ']'",
"object_spec : object_spec HEIGHT expr",
"object_spec : object_spec RADIUS expr",
"object_spec : object_spec WIDTH expr",
"object_spec : object_spec DIAMETER expr",
"object_spec : object_spec expr",
"object_spec : object_spec UP",
"object_spec : object_spec UP expr",
"object_spec : object_spec DOWN",
"object_spec : object_spec DOWN expr",
"object_spec : object_spec RIGHT",
"object_spec : object_spec RIGHT expr",
"object_spec : object_spec LEFT",
"object_spec : object_spec LEFT expr",
"object_spec : object_spec FROM position",
"object_spec : object_spec TO position",
"object_spec : object_spec AT position",
"object_spec : object_spec WITH path",
"object_spec : object_spec WITH position",
"object_spec : object_spec BY expr_pair",
"object_spec : object_spec THEN",
"object_spec : object_spec SOLID",
"object_spec : object_spec DOTTED",
"object_spec : object_spec DOTTED expr",
"object_spec : object_spec DASHED",
"object_spec : object_spec DASHED expr",
"object_spec : object_spec FILL",
"object_spec : object_spec FILL expr",
"object_spec : object_spec XSLANTED expr",
"object_spec : object_spec YSLANTED expr",
"object_spec : object_spec SHADED text",
"object_spec : object_spec COLORED text",
"object_spec : object_spec OUTLINED text",
"object_spec : object_spec CHOP",
"object_spec : object_spec CHOP expr",
"object_spec : object_spec SAME",
"object_spec : object_spec INVISIBLE",
"object_spec : object_spec LEFT_ARROW_HEAD",
"object_spec : object_spec RIGHT_ARROW_HEAD",
"object_spec : object_spec DOUBLE_ARROW_HEAD",
"object_spec : object_spec CW",
"object_spec : object_spec CCW",
"object_spec : object_spec text",
"object_spec : object_spec LJUST",
"object_spec : object_spec RJUST",
"object_spec : object_spec ABOVE",
"object_spec : object_spec BELOW",
"object_spec : object_spec THICKNESS expr",
"object_spec : object_spec ALIGNED",
"text : TEXT",
"text : SPRINTF '(' TEXT sprintf_args ')'",
"sprintf_args :",
"sprintf_args : sprintf_args ',' expr",
"position : position_not_place",
"position : place",
"position : '(' place ')'",
"position_not_place : expr_pair",
"position_not_place : position '+' expr_pair",
"position_not_place : '(' position '+' expr_pair ')'",
"position_not_place : position '-' expr_pair",
"position_not_place : '(' position '-' expr_pair ')'",
"position_not_place : '(' position ',' position ')'",
"position_not_place : expr between position AND position",
"position_not_place : '(' expr between position AND position ')'",
"position_not_place : expr '<' position ',' position '>'",
"position_not_place : '(' expr '<' position ',' position '>' ')'",
"between : BETWEEN",
"between : OF THE WAY BETWEEN",
"expr_pair : expr ',' expr",
"expr_pair : '(' expr_pair ')'",
"place : label",
"place : label corner",
"place : corner label",
"place : corner OF label",
"place : HERE",
"label : LABEL",
"label : nth_primitive",
"label : label '.' LABEL",
"ordinal : ORDINAL",
"ordinal : '`' any_expr TH",
"optional_ordinal_last : LAST",
"optional_ordinal_last : ordinal LAST",
"nth_primitive : ordinal object_type",
"nth_primitive : optional_ordinal_last object_type",
"object_type : BOX",
"object_type : CIRCLE",
"object_type : ELLIPSE",
"object_type : ARC",
"object_type : LINE",
"object_type : ARROW",
"object_type : SPLINE",
"object_type : '[' ']'",
"object_type : TEXT",
"label_path : '.' LABEL",
"label_path : label_path '.' LABEL",
"relative_path : corner",
"relative_path : label_path",
"relative_path : label_path corner",
"path : relative_path",
"path : '(' relative_path ',' relative_path ')'",
"path : ORDINAL LAST object_type relative_path",
"path : LAST object_type relative_path",
"path : ORDINAL object_type relative_path",
"path : LABEL relative_path",
"corner : DOT_N",
"corner : DOT_E",
"corner : DOT_W",
"corner : DOT_S",
"corner : DOT_NE",
"corner : DOT_SE",
"corner : DOT_NW",
"corner : DOT_SW",
"corner : DOT_C",
"corner : DOT_START",
"corner : DOT_END",
"corner : TOP",
"corner : BOTTOM",
"corner : LEFT",
"corner : RIGHT",
"corner : UPPER LEFT",
"corner : LOWER LEFT",
"corner : UPPER RIGHT",
"corner : LOWER RIGHT",
"corner : LEFT_CORNER",
"corner : RIGHT_CORNER",
"corner : UPPER LEFT_CORNER",
"corner : LOWER LEFT_CORNER",
"corner : UPPER RIGHT_CORNER",
"corner : LOWER RIGHT_CORNER",
"corner : NORTH",
"corner : SOUTH",
"corner : EAST",
"corner : WEST",
"corner : CENTER",
"corner : START",
"corner : END",
"expr : VARIABLE",
"expr : NUMBER",
"expr : place DOT_X",
"expr : place DOT_Y",
"expr : place DOT_HT",
"expr : place DOT_WID",
"expr : place DOT_RAD",
"expr : expr '+' expr",
"expr : expr '-' expr",
"expr : expr '*' expr",
"expr : expr '/' expr",
"expr : expr '%' expr",
"expr : expr '^' expr",
"expr : '-' expr",
"expr : '(' any_expr ')'",
"expr : SIN '(' any_expr ')'",
"expr : COS '(' any_expr ')'",
"expr : ATAN2 '(' any_expr ',' any_expr ')'",
"expr : LOG '(' any_expr ')'",
"expr : EXP '(' any_expr ')'",
"expr : SQRT '(' any_expr ')'",
"expr : K_MAX '(' any_expr ',' any_expr ')'",
"expr : K_MIN '(' any_expr ',' any_expr ')'",
"expr : INT '(' any_expr ')'",
"expr : RAND '(' any_expr ')'",
"expr : RAND '(' ')'",
"expr : SRAND '(' any_expr ')'",
"expr : expr '<' expr",
"expr : expr LESSEQUAL expr",
"expr : expr '>' expr",
"expr : expr GREATEREQUAL expr",
"expr : expr EQUALEQUAL expr",
"expr : expr NOTEQUAL expr",
"expr : expr ANDAND expr",
"expr : expr OROR expr",
"expr : '!' expr",

};
#endif
#if YYDEBUG
#include <stdio.h>
#endif

/* define the initial stack-sizes */
#ifdef YYSTACKSIZE
#undef YYMAXDEPTH
#define YYMAXDEPTH  YYSTACKSIZE
#else
#ifdef YYMAXDEPTH
#define YYSTACKSIZE YYMAXDEPTH
#else
#define YYSTACKSIZE 500
#define YYMAXDEPTH  500
#endif
#endif

#define YYINITSTACKSIZE 500

int      yydebug;
int      yynerrs;
int      yyerrflag;
int      yychar;
short   *yyssp;
YYSTYPE *yyvsp;
YYSTYPE  yyval;
YYSTYPE  yylval;

/* variables for the parser stack */
static short   *yyss;
static short   *yysslim;
static YYSTYPE *yyvs;
static unsigned yystacksize;
#line 1667 "pic.y"

/* bison defines const to be empty unless __STDC__ is defined, which it
isn't under cfront */

#ifdef const
#undef const
#endif

static struct {
  const char *name;
  double val;
  int scaled;		     // non-zero if val should be multiplied by scale
} defaults_table[] = {
  { "arcrad", .25, 1 },
  { "arrowht", .1, 1 },
  { "arrowwid", .05, 1 },
  { "circlerad", .25, 1 },
  { "boxht", .5, 1 },
  { "boxwid", .75, 1 },
  { "boxrad", 0.0, 1 },
  { "dashwid", .05, 1 },
  { "ellipseht", .5, 1 },
  { "ellipsewid", .75, 1 },
  { "moveht", .5, 1 },
  { "movewid", .5, 1 },
  { "lineht", .5, 1 },
  { "linewid", .5, 1 },
  { "textht", 0.0, 1 },
  { "textwid", 0.0, 1 },
  { "scale", 1.0, 0 },
  { "linethick", -1.0, 0 },		// in points
  { "fillval", .5, 0 },
  { "arrowhead", 1.0, 0 },
  { "maxpswid", 8.5, 0 },
  { "maxpsht", 11.0, 0 },
};

place *lookup_label(const char *label)
{
  saved_state *state = current_saved_state;
  PTABLE(place) *tbl = current_table;
  for (;;) {
    place *pl = tbl->lookup(label);
    if (pl)
      return pl;
    if (!state)
      return 0;
    tbl = state->tbl;
    state = state->prev;
  }
}

void define_label(const char *label, const place *pl)
{
  place *p = new place[1];
  *p = *pl;
  current_table->define(label, p);
}

int lookup_variable(const char *name, double *val)
{
  place *pl = lookup_label(name);
  if (pl) {
    *val = pl->x;
    return 1;
  }
  return 0;
}

void define_variable(const char *name, double val)
{
  place *p = new place[1];
  p->obj = 0;
  p->x = val;
  p->y = 0.0;
  current_table->define(name, p);
  if (strcmp(name, "scale") == 0) {
    // When the scale changes, reset all scaled pre-defined variables to
    // their default values.
    for (unsigned int i = 0;
	 i < sizeof(defaults_table)/sizeof(defaults_table[0]); i++) 
      if (defaults_table[i].scaled)
	define_variable(defaults_table[i].name, val*defaults_table[i].val);
  }
}

// called once only (not once per parse)

void parse_init()
{
  current_direction = RIGHT_DIRECTION;
  current_position.x = 0.0;
  current_position.y = 0.0;
  // This resets everything to its default value.
  reset_all();
}

void reset(const char *nm)
{
  for (unsigned int i = 0;
       i < sizeof(defaults_table)/sizeof(defaults_table[0]); i++)
    if (strcmp(nm, defaults_table[i].name) == 0) {
      double val = defaults_table[i].val;
      if (defaults_table[i].scaled) {
	double scale;
	lookup_variable("scale", &scale);
	val *= scale;
      }
      define_variable(defaults_table[i].name, val);
      return;
    }
  lex_error("`%1' is not a predefined variable", nm);
}

void reset_all()
{
  // We only have to explicitly reset the pre-defined variables that
  // aren't scaled because `scale' is not scaled, and changing the
  // value of `scale' will reset all the pre-defined variables that
  // are scaled.
  for (unsigned int i = 0;
       i < sizeof(defaults_table)/sizeof(defaults_table[0]); i++)
    if (!defaults_table[i].scaled)
      define_variable(defaults_table[i].name, defaults_table[i].val);
}

// called after each parse

void parse_cleanup()
{
  while (current_saved_state != 0) {
    delete current_table;
    current_table = current_saved_state->tbl;
    saved_state *tem = current_saved_state;
    current_saved_state = current_saved_state->prev;
    delete tem;
  }
  assert(current_table == &top_table);
  PTABLE_ITERATOR(place) iter(current_table);
  const char *key;
  place *pl;
  while (iter.next(&key, &pl))
    if (pl->obj != 0) {
      position pos = pl->obj->origin();
      pl->obj = 0;
      pl->x = pos.x;
      pl->y = pos.y;
    }
  while (olist.head != 0) {
    object *tem = olist.head;
    olist.head = olist.head->next;
    delete tem;
  }
  olist.tail = 0;
  current_direction = RIGHT_DIRECTION;
  current_position.x = 0.0;
  current_position.y = 0.0;
}

const char *ordinal_postfix(int n)
{
  if (n < 10 || n > 20)
    switch (n % 10) {
    case 1:
      return "st";
    case 2:
      return "nd";
    case 3:
      return "rd";
    }
  return "th";
}

const char *object_type_name(object_type type)
{
  switch (type) {
  case BOX_OBJECT:
    return "box";
  case CIRCLE_OBJECT:
    return "circle";
  case ELLIPSE_OBJECT:
    return "ellipse";
  case ARC_OBJECT:
    return "arc";
  case SPLINE_OBJECT:
    return "spline";
  case LINE_OBJECT:
    return "line";
  case ARROW_OBJECT:
    return "arrow";
  case MOVE_OBJECT:
    return "move";
  case TEXT_OBJECT:
    return "\"\"";
  case BLOCK_OBJECT:
    return "[]";
  case OTHER_OBJECT:
  case MARK_OBJECT:
  default:
    break;
  }
  return "object";
}

static char sprintf_buf[1024];

char *format_number(const char *form, double n)
{
  if (form == 0)
    form = "%g";
  return do_sprintf(form, &n, 1);
}

char *do_sprintf(const char *form, const double *v, int nv)
{
  string result;
  int i = 0;
  string one_format;
  while (*form) {
    if (*form == '%') {
      one_format += *form++;
      for (; *form != '\0' && strchr("#-+ 0123456789.", *form) != 0; form++)
	one_format += *form;
      if (*form == '\0' || strchr("eEfgG%", *form) == 0) {
	lex_error("bad sprintf format");
	result += one_format;
	result += form;
	break;
      }
      if (*form == '%') {
	one_format += *form++;
	one_format += '\0';
	snprintf(sprintf_buf, sizeof(sprintf_buf),
		 "%s", one_format.contents());
      }
      else {
	if (i >= nv) {
	  lex_error("too few arguments to snprintf");
	  result += one_format;
	  result += form;
	  break;
	}
	one_format += *form++;
	one_format += '\0';
	snprintf(sprintf_buf, sizeof(sprintf_buf),
		 one_format.contents(), v[i++]);
      }
      one_format.clear();
      result += sprintf_buf;
    }
    else
      result += *form++;
  }
  result += '\0';
  return strsave(result.contents());
}
#line 3917 "pic.cpp"
/* allocate initial stack or double stack size, up to YYMAXDEPTH */
static int yygrowstack(void)
{
    int i;
    unsigned newsize;
    short *newss;
    YYSTYPE *newvs;

    if ((newsize = yystacksize) == 0)
        newsize = YYINITSTACKSIZE;
    else if (newsize >= YYMAXDEPTH)
        return -1;
    else if ((newsize *= 2) > YYMAXDEPTH)
        newsize = YYMAXDEPTH;

    i = yyssp - yyss;
    newss = (yyss != 0)
          ? (short *)realloc(yyss, newsize * sizeof(*newss))
          : (short *)malloc(newsize * sizeof(*newss));
    if (newss == 0)
        return -1;

    yyss  = newss;
    yyssp = newss + i;
    newvs = (yyvs != 0)
          ? (YYSTYPE *)realloc(yyvs, newsize * sizeof(*newvs))
          : (YYSTYPE *)malloc(newsize * sizeof(*newvs));
    if (newvs == 0)
        return -1;

    yyvs = newvs;
    yyvsp = newvs + i;
    yystacksize = newsize;
    yysslim = yyss + newsize - 1;
    return 0;
}

#define YYABORT  goto yyabort
#define YYREJECT goto yyabort
#define YYACCEPT goto yyaccept
#define YYERROR  goto yyerrlab

int
YYPARSE_DECL()
{
    int yym, yyn, yystate;
#if YYDEBUG
    const char *yys;

    if ((yys = getenv("YYDEBUG")) != 0)
    {
        yyn = *yys;
        if (yyn >= '0' && yyn <= '9')
            yydebug = yyn - '0';
    }
#endif

    yynerrs = 0;
    yyerrflag = 0;
    yychar = YYEMPTY;
    yystate = 0;

    if (yyss == NULL && yygrowstack()) goto yyoverflow;
    yyssp = yyss;
    yyvsp = yyvs;
    yystate = 0;
    *yyssp = 0;

yyloop:
    if ((yyn = yydefred[yystate]) != 0) goto yyreduce;
    if (yychar < 0)
    {
        if ((yychar = yylex()) < 0) yychar = 0;
#if YYDEBUG
        if (yydebug)
        {
            yys = 0;
            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
            if (!yys) yys = "illegal-symbol";
            printf("%sdebug: state %d, reading %d (%s)\n",
                    YYPREFIX, yystate, yychar, yys);
        }
#endif
    }
    if ((yyn = yysindex[yystate]) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
    {
#if YYDEBUG
        if (yydebug)
            printf("%sdebug: state %d, shifting to state %d\n",
                    YYPREFIX, yystate, yytable[yyn]);
#endif
        if (yyssp >= yysslim && yygrowstack())
        {
            goto yyoverflow;
        }
        yystate = yytable[yyn];
        *++yyssp = yytable[yyn];
        *++yyvsp = yylval;
        yychar = YYEMPTY;
        if (yyerrflag > 0)  --yyerrflag;
        goto yyloop;
    }
    if ((yyn = yyrindex[yystate]) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
    {
        yyn = yytable[yyn];
        goto yyreduce;
    }
    if (yyerrflag) goto yyinrecovery;

    yyerror("syntax error");

    goto yyerrlab;

yyerrlab:
    ++yynerrs;

yyinrecovery:
    if (yyerrflag < 3)
    {
        yyerrflag = 3;
        for (;;)
        {
            if ((yyn = yysindex[*yyssp]) && (yyn += YYERRCODE) >= 0 &&
                    yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)
            {
#if YYDEBUG
                if (yydebug)
                    printf("%sdebug: state %d, error recovery shifting\
 to state %d\n", YYPREFIX, *yyssp, yytable[yyn]);
#endif
                if (yyssp >= yysslim && yygrowstack())
                {
                    goto yyoverflow;
                }
                yystate = yytable[yyn];
                *++yyssp = yytable[yyn];
                *++yyvsp = yylval;
                goto yyloop;
            }
            else
            {
#if YYDEBUG
                if (yydebug)
                    printf("%sdebug: error recovery discarding state %d\n",
                            YYPREFIX, *yyssp);
#endif
                if (yyssp <= yyss) goto yyabort;
                --yyssp;
                --yyvsp;
            }
        }
    }
    else
    {
        if (yychar == 0) goto yyabort;
#if YYDEBUG
        if (yydebug)
        {
            yys = 0;
            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
            if (!yys) yys = "illegal-symbol";
            printf("%sdebug: state %d, error recovery discards token %d (%s)\n",
                    YYPREFIX, yystate, yychar, yys);
        }
#endif
        yychar = YYEMPTY;
        goto yyloop;
    }

yyreduce:
#if YYDEBUG
    if (yydebug)
        printf("%sdebug: state %d, reducing by rule %d (%s)\n",
                YYPREFIX, yystate, yyn, yyrule[yyn]);
#endif
    yym = yylen[yyn];
    if (yym)
        yyval = yyvsp[1-yym];
    else
        memset(&yyval, 0, sizeof yyval);
    switch (yyn)
    {
case 2:
#line 277 "pic.y"
	{
		  if (olist.head)
		    print_picture(olist.head);
		}
break;
case 3:
#line 286 "pic.y"
	{ yyval.pl = yyvsp[-1].pl; }
break;
case 4:
#line 291 "pic.y"
	{ yyval.pl = yyvsp[0].pl; }
break;
case 5:
#line 293 "pic.y"
	{ yyval.pl = yyvsp[-2].pl; }
break;
case 10:
#line 308 "pic.y"
	{
		  a_delete graphname;
		  graphname = new char[strlen(yyvsp[0].str) + 1];
		  strcpy(graphname, yyvsp[0].str);
		  a_delete yyvsp[0].str;
		}
break;
case 11:
#line 316 "pic.y"
	{
		  define_variable(yyvsp[-2].str, yyvsp[0].x);
		  a_delete yyvsp[-2].str;
		}
break;
case 12:
#line 321 "pic.y"
	{
		  place *p = lookup_label(yyvsp[-3].str);
		  if (!p) {
		    lex_error("variable `%1' not defined", yyvsp[-3].str);
		    YYABORT;
		  }
		  p->obj = 0;
		  p->x = yyvsp[0].x;
		  p->y = 0.0;
		  a_delete yyvsp[-3].str;
		}
break;
case 13:
#line 333 "pic.y"
	{ current_direction = UP_DIRECTION; }
break;
case 14:
#line 335 "pic.y"
	{ current_direction = DOWN_DIRECTION; }
break;
case 15:
#line 337 "pic.y"
	{ current_direction = LEFT_DIRECTION; }
break;
case 16:
#line 339 "pic.y"
	{ current_direction = RIGHT_DIRECTION; }
break;
case 17:
#line 341 "pic.y"
	{
		  olist.append(make_command_object(yyvsp[0].lstr.str, yyvsp[0].lstr.filename,
						   yyvsp[0].lstr.lineno));
		}
break;
case 18:
#line 346 "pic.y"
	{
		  olist.append(make_command_object(yyvsp[0].lstr.str, yyvsp[0].lstr.filename,
						   yyvsp[0].lstr.lineno));
		}
break;
case 19:
#line 351 "pic.y"
	{
		  fprintf(stderr, "%s\n", yyvsp[0].lstr.str);
		  a_delete yyvsp[0].lstr.str;
		  fflush(stderr);
		}
break;
case 20:
#line 357 "pic.y"
	{ delim_flag = 1; }
break;
case 21:
#line 359 "pic.y"
	{
		  delim_flag = 0;
		  if (safer_flag)
		    lex_error("unsafe to run command `%1'", yyvsp[0].str);
		  else
		    system(yyvsp[0].str);
		  a_delete yyvsp[0].str;
		}
break;
case 22:
#line 368 "pic.y"
	{
		  if (yychar < 0)
		    do_lookahead();
		  do_copy(yyvsp[0].lstr.str);
		  /* do not delete the filename*/
		}
break;
case 23:
#line 375 "pic.y"
	{ delim_flag = 2; }
break;
case 24:
#line 377 "pic.y"
	{ delim_flag = 0; }
break;
case 25:
#line 379 "pic.y"
	{
		  if (yychar < 0)
		    do_lookahead();
		  copy_file_thru(yyvsp[-5].lstr.str, yyvsp[-2].str, yyvsp[0].str);
		  /* do not delete the filename*/
		  a_delete yyvsp[-2].str;
		  a_delete yyvsp[0].str;
		}
break;
case 26:
#line 388 "pic.y"
	{ delim_flag = 2; }
break;
case 27:
#line 390 "pic.y"
	{ delim_flag = 0; }
break;
case 28:
#line 392 "pic.y"
	{
		  if (yychar < 0)
		    do_lookahead();
		  copy_rest_thru(yyvsp[-2].str, yyvsp[0].str);
		  a_delete yyvsp[-2].str;
		  a_delete yyvsp[0].str;
		}
break;
case 29:
#line 400 "pic.y"
	{ delim_flag = 1; }
break;
case 30:
#line 402 "pic.y"
	{
		  delim_flag = 0;
		  if (yychar < 0)
		    do_lookahead();
		  do_for(yyvsp[-8].str, yyvsp[-6].x, yyvsp[-4].x, yyvsp[-3].by.is_multiplicative, yyvsp[-3].by.val, yyvsp[0].str); 
		}
break;
case 31:
#line 409 "pic.y"
	{
		  if (yychar < 0)
		    do_lookahead();
		  if (yyvsp[0].if_data.x != 0.0)
		    push_body(yyvsp[0].if_data.body);
		  a_delete yyvsp[0].if_data.body;
		}
break;
case 32:
#line 417 "pic.y"
	{ delim_flag = 1; }
break;
case 33:
#line 419 "pic.y"
	{
		  delim_flag = 0;
		  if (yychar < 0)
		    do_lookahead();
		  if (yyvsp[-3].if_data.x != 0.0)
		    push_body(yyvsp[-3].if_data.body);
		  else
		    push_body(yyvsp[0].str);
		  a_delete yyvsp[-3].if_data.body;
		  a_delete yyvsp[0].str;
		}
break;
case 35:
#line 432 "pic.y"
	{ define_variable("scale", 1.0); }
break;
case 38:
#line 442 "pic.y"
	{
		  reset(yyvsp[0].str);
		  a_delete yyvsp[0].str;
		}
break;
case 39:
#line 447 "pic.y"
	{
		  reset(yyvsp[0].str);
		  a_delete yyvsp[0].str;
		}
break;
case 40:
#line 452 "pic.y"
	{
		  reset(yyvsp[0].str);
		  a_delete yyvsp[0].str;
		}
break;
case 41:
#line 460 "pic.y"
	{ yyval.lstr = yyvsp[0].lstr; }
break;
case 42:
#line 462 "pic.y"
	{
		  yyval.lstr.str = new char[strlen(yyvsp[-1].lstr.str) + strlen(yyvsp[0].lstr.str) + 1];
		  strcpy(yyval.lstr.str, yyvsp[-1].lstr.str);
		  strcat(yyval.lstr.str, yyvsp[0].lstr.str);
		  a_delete yyvsp[-1].lstr.str;
		  a_delete yyvsp[0].lstr.str;
		  if (yyvsp[-1].lstr.filename) {
		    yyval.lstr.filename = yyvsp[-1].lstr.filename;
		    yyval.lstr.lineno = yyvsp[-1].lstr.lineno;
		  }
		  else if (yyvsp[0].lstr.filename) {
		    yyval.lstr.filename = yyvsp[0].lstr.filename;
		    yyval.lstr.lineno = yyvsp[0].lstr.lineno;
		  }
		}
break;
case 43:
#line 481 "pic.y"
	{
		  yyval.lstr.str = new char[GDIGITS + 1];
		  sprintf(yyval.lstr.str, "%g", yyvsp[0].x);
		  yyval.lstr.filename = 0;
		  yyval.lstr.lineno = 0;
		}
break;
case 44:
#line 488 "pic.y"
	{ yyval.lstr = yyvsp[0].lstr; }
break;
case 45:
#line 490 "pic.y"
	{
		  yyval.lstr.str = new char[GDIGITS + 2 + GDIGITS + 1];
		  sprintf(yyval.lstr.str, "%g, %g", yyvsp[0].pair.x, yyvsp[0].pair.y);
		  yyval.lstr.filename = 0;
		  yyval.lstr.lineno = 0;
		}
break;
case 46:
#line 500 "pic.y"
	{ delim_flag = 1; }
break;
case 47:
#line 502 "pic.y"
	{
		  delim_flag = 0;
		  yyval.if_data.x = yyvsp[-3].x;
		  yyval.if_data.body = yyvsp[0].str;
		}
break;
case 48:
#line 511 "pic.y"
	{ yyval.str = 0; }
break;
case 49:
#line 513 "pic.y"
	{ yyval.str = yyvsp[0].lstr.str; }
break;
case 50:
#line 518 "pic.y"
	{ yyval.x = yyvsp[0].x; }
break;
case 51:
#line 520 "pic.y"
	{ yyval.x = yyvsp[0].x; }
break;
case 52:
#line 525 "pic.y"
	{
		  yyval.x = strcmp(yyvsp[-2].lstr.str, yyvsp[0].lstr.str) == 0;
		  a_delete yyvsp[-2].lstr.str;
		  a_delete yyvsp[0].lstr.str;
		}
break;
case 53:
#line 531 "pic.y"
	{
		  yyval.x = strcmp(yyvsp[-2].lstr.str, yyvsp[0].lstr.str) != 0;
		  a_delete yyvsp[-2].lstr.str;
		  a_delete yyvsp[0].lstr.str;
		}
break;
case 54:
#line 537 "pic.y"
	{ yyval.x = (yyvsp[-2].x != 0.0 && yyvsp[0].x != 0.0); }
break;
case 55:
#line 539 "pic.y"
	{ yyval.x = (yyvsp[-2].x != 0.0 && yyvsp[0].x != 0.0); }
break;
case 56:
#line 541 "pic.y"
	{ yyval.x = (yyvsp[-2].x != 0.0 && yyvsp[0].x != 0.0); }
break;
case 57:
#line 543 "pic.y"
	{ yyval.x = (yyvsp[-2].x != 0.0 || yyvsp[0].x != 0.0); }
break;
case 58:
#line 545 "pic.y"
	{ yyval.x = (yyvsp[-2].x != 0.0 || yyvsp[0].x != 0.0); }
break;
case 59:
#line 547 "pic.y"
	{ yyval.x = (yyvsp[-2].x != 0.0 || yyvsp[0].x != 0.0); }
break;
case 60:
#line 549 "pic.y"
	{ yyval.x = (yyvsp[0].x == 0.0); }
break;
case 61:
#line 555 "pic.y"
	{
		  yyval.by.val = 1.0;
		  yyval.by.is_multiplicative = 0;
		}
break;
case 62:
#line 560 "pic.y"
	{
		  yyval.by.val = yyvsp[0].x;
		  yyval.by.is_multiplicative = 0;
		}
break;
case 63:
#line 565 "pic.y"
	{
		  yyval.by.val = yyvsp[0].x;
		  yyval.by.is_multiplicative = 1;
		}
break;
case 64:
#line 573 "pic.y"
	{
		  yyval.pl.obj = yyvsp[0].spec->make_object(&current_position,
					   &current_direction);
		  if (yyval.pl.obj == 0)
		    YYABORT;
		  delete yyvsp[0].spec;
		  if (yyval.pl.obj)
		    olist.append(yyval.pl.obj);
		  else {
		    yyval.pl.x = current_position.x;
		    yyval.pl.y = current_position.y;
		  }
		}
break;
case 65:
#line 587 "pic.y"
	{
		  yyval.pl = yyvsp[0].pl;
		  define_label(yyvsp[-3].str, & yyval.pl);
		  a_delete yyvsp[-3].str;
		}
break;
case 66:
#line 593 "pic.y"
	{
		  yyval.pl.obj = 0;
		  yyval.pl.x = yyvsp[0].pair.x;
		  yyval.pl.y = yyvsp[0].pair.y;
		  define_label(yyvsp[-3].str, & yyval.pl);
		  a_delete yyvsp[-3].str;
		}
break;
case 67:
#line 601 "pic.y"
	{
		  yyval.pl = yyvsp[0].pl;
		  define_label(yyvsp[-3].str, & yyval.pl);
		  a_delete yyvsp[-3].str;
		}
break;
case 68:
#line 607 "pic.y"
	{
		  yyval.state.x = current_position.x;
		  yyval.state.y = current_position.y;
		  yyval.state.dir = current_direction;
		}
break;
case 69:
#line 613 "pic.y"
	{
		  current_position.x = yyvsp[-2].state.x;
		  current_position.y = yyvsp[-2].state.y;
		  current_direction = yyvsp[-2].state.dir;
		}
break;
case 70:
#line 619 "pic.y"
	{
		  yyval.pl = yyvsp[-3].pl;
		}
break;
case 71:
#line 623 "pic.y"
	{
		  yyval.pl.obj = 0;
		  yyval.pl.x = current_position.x;
		  yyval.pl.y = current_position.y;
		}
break;
case 72:
#line 632 "pic.y"
	{}
break;
case 73:
#line 634 "pic.y"
	{}
break;
case 74:
#line 639 "pic.y"
	{ yyval.spec = new object_spec(BOX_OBJECT); }
break;
case 75:
#line 641 "pic.y"
	{ yyval.spec = new object_spec(CIRCLE_OBJECT); }
break;
case 76:
#line 643 "pic.y"
	{ yyval.spec = new object_spec(ELLIPSE_OBJECT); }
break;
case 77:
#line 645 "pic.y"
	{
		  yyval.spec = new object_spec(ARC_OBJECT);
		  yyval.spec->dir = current_direction;
		}
break;
case 78:
#line 650 "pic.y"
	{
		  yyval.spec = new object_spec(LINE_OBJECT);
		  lookup_variable("lineht", & yyval.spec->segment_height);
		  lookup_variable("linewid", & yyval.spec->segment_width);
		  yyval.spec->dir = current_direction;
		}
break;
case 79:
#line 657 "pic.y"
	{
		  yyval.spec = new object_spec(ARROW_OBJECT);
		  lookup_variable("lineht", & yyval.spec->segment_height);
		  lookup_variable("linewid", & yyval.spec->segment_width);
		  yyval.spec->dir = current_direction;
		}
break;
case 80:
#line 664 "pic.y"
	{
		  yyval.spec = new object_spec(MOVE_OBJECT);
		  lookup_variable("moveht", & yyval.spec->segment_height);
		  lookup_variable("movewid", & yyval.spec->segment_width);
		  yyval.spec->dir = current_direction;
		}
break;
case 81:
#line 671 "pic.y"
	{
		  yyval.spec = new object_spec(SPLINE_OBJECT);
		  lookup_variable("lineht", & yyval.spec->segment_height);
		  lookup_variable("linewid", & yyval.spec->segment_width);
		  yyval.spec->dir = current_direction;
		}
break;
case 82:
#line 678 "pic.y"
	{
		  yyval.spec = new object_spec(TEXT_OBJECT);
		  yyval.spec->text = new text_item(yyvsp[0].lstr.str, yyvsp[0].lstr.filename, yyvsp[0].lstr.lineno);
		}
break;
case 83:
#line 683 "pic.y"
	{
		  yyval.spec = new object_spec(TEXT_OBJECT);
		  yyval.spec->text = new text_item(format_number(0, yyvsp[0].x), 0, -1);
		}
break;
case 84:
#line 688 "pic.y"
	{
		  yyval.spec = new object_spec(TEXT_OBJECT);
		  yyval.spec->text = new text_item(format_number(yyvsp[0].lstr.str, yyvsp[-1].x),
					   yyvsp[0].lstr.filename, yyvsp[0].lstr.lineno);
		  a_delete yyvsp[0].lstr.str;
		}
break;
case 85:
#line 695 "pic.y"
	{
		  saved_state *p = new saved_state;
		  yyval.pstate = p;
		  p->x = current_position.x;
		  p->y = current_position.y;
		  p->dir = current_direction;
		  p->tbl = current_table;
		  p->prev = current_saved_state;
		  current_position.x = 0.0;
		  current_position.y = 0.0;
		  current_table = new PTABLE(place);
		  current_saved_state = p;
		  olist.append(make_mark_object());
		}
break;
case 86:
#line 710 "pic.y"
	{
		  current_position.x = yyvsp[-2].pstate->x;
		  current_position.y = yyvsp[-2].pstate->y;
		  current_direction = yyvsp[-2].pstate->dir;
		  yyval.spec = new object_spec(BLOCK_OBJECT);
		  olist.wrap_up_block(& yyval.spec->oblist);
		  yyval.spec->tbl = current_table;
		  current_table = yyvsp[-2].pstate->tbl;
		  current_saved_state = yyvsp[-2].pstate->prev;
		  delete yyvsp[-2].pstate;
		}
break;
case 87:
#line 722 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->height = yyvsp[0].x;
		  yyval.spec->flags |= HAS_HEIGHT;
		}
break;
case 88:
#line 728 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->radius = yyvsp[0].x;
		  yyval.spec->flags |= HAS_RADIUS;
		}
break;
case 89:
#line 734 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->width = yyvsp[0].x;
		  yyval.spec->flags |= HAS_WIDTH;
		}
break;
case 90:
#line 740 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->radius = yyvsp[0].x/2.0;
		  yyval.spec->flags |= HAS_RADIUS;
		}
break;
case 91:
#line 746 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= HAS_SEGMENT;
		  switch (yyval.spec->dir) {
		  case UP_DIRECTION:
		    yyval.spec->segment_pos.y += yyvsp[0].x;
		    break;
		  case DOWN_DIRECTION:
		    yyval.spec->segment_pos.y -= yyvsp[0].x;
		    break;
		  case RIGHT_DIRECTION:
		    yyval.spec->segment_pos.x += yyvsp[0].x;
		    break;
		  case LEFT_DIRECTION:
		    yyval.spec->segment_pos.x -= yyvsp[0].x;
		    break;
		  }
		}
break;
case 92:
#line 765 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->dir = UP_DIRECTION;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.y += yyval.spec->segment_height;
		}
break;
case 93:
#line 772 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->dir = UP_DIRECTION;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.y += yyvsp[0].x;
		}
break;
case 94:
#line 779 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->dir = DOWN_DIRECTION;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.y -= yyval.spec->segment_height;
		}
break;
case 95:
#line 786 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->dir = DOWN_DIRECTION;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.y -= yyvsp[0].x;
		}
break;
case 96:
#line 793 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->dir = RIGHT_DIRECTION;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.x += yyval.spec->segment_width;
		}
break;
case 97:
#line 800 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->dir = RIGHT_DIRECTION;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.x += yyvsp[0].x;
		}
break;
case 98:
#line 807 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->dir = LEFT_DIRECTION;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.x -= yyval.spec->segment_width;
		}
break;
case 99:
#line 814 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->dir = LEFT_DIRECTION;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.x -= yyvsp[0].x;
		}
break;
case 100:
#line 821 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= HAS_FROM;
		  yyval.spec->from.x = yyvsp[0].pair.x;
		  yyval.spec->from.y = yyvsp[0].pair.y;
		}
break;
case 101:
#line 828 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  if (yyval.spec->flags & HAS_SEGMENT)
		    yyval.spec->segment_list = new segment(yyval.spec->segment_pos,
						   yyval.spec->segment_is_absolute,
						   yyval.spec->segment_list);
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.x = yyvsp[0].pair.x;
		  yyval.spec->segment_pos.y = yyvsp[0].pair.y;
		  yyval.spec->segment_is_absolute = 1;
		  yyval.spec->flags |= HAS_TO;
		  yyval.spec->to.x = yyvsp[0].pair.x;
		  yyval.spec->to.y = yyvsp[0].pair.y;
		}
break;
case 102:
#line 843 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= HAS_AT;
		  yyval.spec->at.x = yyvsp[0].pair.x;
		  yyval.spec->at.y = yyvsp[0].pair.y;
		  if (yyval.spec->type != ARC_OBJECT) {
		    yyval.spec->flags |= HAS_FROM;
		    yyval.spec->from.x = yyvsp[0].pair.x;
		    yyval.spec->from.y = yyvsp[0].pair.y;
		  }
		}
break;
case 103:
#line 855 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= HAS_WITH;
		  yyval.spec->with = yyvsp[0].pth;
		}
break;
case 104:
#line 861 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= HAS_WITH;
		  position pos;
		  pos.x = yyvsp[0].pair.x;
		  pos.y = yyvsp[0].pair.y;
		  yyval.spec->with = new path(pos);
		}
break;
case 105:
#line 870 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= HAS_SEGMENT;
		  yyval.spec->segment_pos.x += yyvsp[0].pair.x;
		  yyval.spec->segment_pos.y += yyvsp[0].pair.y;
		}
break;
case 106:
#line 877 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  if (!(yyval.spec->flags & HAS_SEGMENT))
		    switch (yyval.spec->dir) {
		    case UP_DIRECTION:
		      yyval.spec->segment_pos.y += yyval.spec->segment_width;
		      break;
		    case DOWN_DIRECTION:
		      yyval.spec->segment_pos.y -= yyval.spec->segment_width;
		      break;
		    case RIGHT_DIRECTION:
		      yyval.spec->segment_pos.x += yyval.spec->segment_width;
		      break;
		    case LEFT_DIRECTION:
		      yyval.spec->segment_pos.x -= yyval.spec->segment_width;
		      break;
		    }
		  yyval.spec->segment_list = new segment(yyval.spec->segment_pos,
						 yyval.spec->segment_is_absolute,
						 yyval.spec->segment_list);
		  yyval.spec->flags &= ~HAS_SEGMENT;
		  yyval.spec->segment_pos.x = yyval.spec->segment_pos.y = 0.0;
		  yyval.spec->segment_is_absolute = 0;
		}
break;
case 107:
#line 902 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;	/* nothing*/
		}
break;
case 108:
#line 906 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= IS_DOTTED;
		  lookup_variable("dashwid", & yyval.spec->dash_width);
		}
break;
case 109:
#line 912 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= IS_DOTTED;
		  yyval.spec->dash_width = yyvsp[0].x;
		}
break;
case 110:
#line 918 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= IS_DASHED;
		  lookup_variable("dashwid", & yyval.spec->dash_width);
		}
break;
case 111:
#line 924 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= IS_DASHED;
		  yyval.spec->dash_width = yyvsp[0].x;
		}
break;
case 112:
#line 930 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= IS_DEFAULT_FILLED;
		}
break;
case 113:
#line 935 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= IS_FILLED;
		  yyval.spec->fill = yyvsp[0].x;
		}
break;
case 114:
#line 941 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= IS_XSLANTED;
		  yyval.spec->xslanted = yyvsp[0].x;
		}
break;
case 115:
#line 947 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= IS_YSLANTED;
		  yyval.spec->yslanted = yyvsp[0].x;
		}
break;
case 116:
#line 953 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= (IS_SHADED | IS_FILLED);
		  yyval.spec->shaded = new char[strlen(yyvsp[0].lstr.str)+1];
		  strcpy(yyval.spec->shaded, yyvsp[0].lstr.str);
		}
break;
case 117:
#line 960 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= (IS_SHADED | IS_OUTLINED | IS_FILLED);
		  yyval.spec->shaded = new char[strlen(yyvsp[0].lstr.str)+1];
		  strcpy(yyval.spec->shaded, yyvsp[0].lstr.str);
		  yyval.spec->outlined = new char[strlen(yyvsp[0].lstr.str)+1];
		  strcpy(yyval.spec->outlined, yyvsp[0].lstr.str);
		}
break;
case 118:
#line 969 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= IS_OUTLINED;
		  yyval.spec->outlined = new char[strlen(yyvsp[0].lstr.str)+1];
		  strcpy(yyval.spec->outlined, yyvsp[0].lstr.str);
		}
break;
case 119:
#line 976 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  /* line chop chop means line chop 0 chop 0*/
		  if (yyval.spec->flags & IS_DEFAULT_CHOPPED) {
		    yyval.spec->flags |= IS_CHOPPED;
		    yyval.spec->flags &= ~IS_DEFAULT_CHOPPED;
		    yyval.spec->start_chop = yyval.spec->end_chop = 0.0;
		  }
		  else if (yyval.spec->flags & IS_CHOPPED) {
		    yyval.spec->end_chop = 0.0;
		  }
		  else {
		    yyval.spec->flags |= IS_DEFAULT_CHOPPED;
		  }
		}
break;
case 120:
#line 992 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  if (yyval.spec->flags & IS_DEFAULT_CHOPPED) {
		    yyval.spec->flags |= IS_CHOPPED;
		    yyval.spec->flags &= ~IS_DEFAULT_CHOPPED;
		    yyval.spec->start_chop = 0.0;
		    yyval.spec->end_chop = yyvsp[0].x;
		  }
		  else if (yyval.spec->flags & IS_CHOPPED) {
		    yyval.spec->end_chop = yyvsp[0].x;
		  }
		  else {
		    yyval.spec->start_chop = yyval.spec->end_chop = yyvsp[0].x;
		    yyval.spec->flags |= IS_CHOPPED;
		  }
		}
break;
case 121:
#line 1009 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= IS_SAME;
		}
break;
case 122:
#line 1014 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= IS_INVISIBLE;
		}
break;
case 123:
#line 1019 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= HAS_LEFT_ARROW_HEAD;
		}
break;
case 124:
#line 1024 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= HAS_RIGHT_ARROW_HEAD;
		}
break;
case 125:
#line 1029 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= (HAS_LEFT_ARROW_HEAD|HAS_RIGHT_ARROW_HEAD);
		}
break;
case 126:
#line 1034 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= IS_CLOCKWISE;
		}
break;
case 127:
#line 1039 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags &= ~IS_CLOCKWISE;
		}
break;
case 128:
#line 1044 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  text_item **p;
		  for (p = & yyval.spec->text; *p; p = &(*p)->next)
		    ;
		  *p = new text_item(yyvsp[0].lstr.str, yyvsp[0].lstr.filename, yyvsp[0].lstr.lineno);
		}
break;
case 129:
#line 1052 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  if (yyval.spec->text) {
		    text_item *p;
		    for (p = yyval.spec->text; p->next; p = p->next)
		      ;
		    p->adj.h = LEFT_ADJUST;
		  }
		}
break;
case 130:
#line 1062 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  if (yyval.spec->text) {
		    text_item *p;
		    for (p = yyval.spec->text; p->next; p = p->next)
		      ;
		    p->adj.h = RIGHT_ADJUST;
		  }
		}
break;
case 131:
#line 1072 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  if (yyval.spec->text) {
		    text_item *p;
		    for (p = yyval.spec->text; p->next; p = p->next)
		      ;
		    p->adj.v = ABOVE_ADJUST;
		  }
		}
break;
case 132:
#line 1082 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  if (yyval.spec->text) {
		    text_item *p;
		    for (p = yyval.spec->text; p->next; p = p->next)
		      ;
		    p->adj.v = BELOW_ADJUST;
		  }
		}
break;
case 133:
#line 1092 "pic.y"
	{
		  yyval.spec = yyvsp[-2].spec;
		  yyval.spec->flags |= HAS_THICKNESS;
		  yyval.spec->thickness = yyvsp[0].x;
		}
break;
case 134:
#line 1098 "pic.y"
	{
		  yyval.spec = yyvsp[-1].spec;
		  yyval.spec->flags |= IS_ALIGNED;
		}
break;
case 135:
#line 1106 "pic.y"
	{ yyval.lstr = yyvsp[0].lstr; }
break;
case 136:
#line 1108 "pic.y"
	{
		  yyval.lstr.filename = yyvsp[-2].lstr.filename;
		  yyval.lstr.lineno = yyvsp[-2].lstr.lineno;
		  yyval.lstr.str = do_sprintf(yyvsp[-2].lstr.str, yyvsp[-1].dv.v, yyvsp[-1].dv.nv);
		  a_delete yyvsp[-1].dv.v;
		  a_delete yyvsp[-2].lstr.str;
		}
break;
case 137:
#line 1119 "pic.y"
	{
		  yyval.dv.v = 0;
		  yyval.dv.nv = 0;
		  yyval.dv.maxv = 0;
		}
break;
case 138:
#line 1125 "pic.y"
	{
		  yyval.dv = yyvsp[-2].dv;
		  if (yyval.dv.nv >= yyval.dv.maxv) {
		    if (yyval.dv.nv == 0) {
		      yyval.dv.v = new double[4];
		      yyval.dv.maxv = 4;
		    }
		    else {
		      double *oldv = yyval.dv.v;
		      yyval.dv.maxv *= 2;
#if 0
		      yyval.dv.v = new double[yyval.dv.maxv];
		      memcpy(yyval.dv.v, oldv, yyval.dv.nv*sizeof(double));
#else
		      /* workaround for bug in Compaq C++ V6.5-033*/
		      /* for Compaq Tru64 UNIX V5.1A (Rev. 1885)*/
		      double *foo = new double[yyval.dv.maxv];
		      memcpy(foo, oldv, yyval.dv.nv*sizeof(double));
		      yyval.dv.v = foo;
#endif
		      a_delete oldv;
		    }
		  }
		  yyval.dv.v[yyval.dv.nv] = yyvsp[0].x;
		  yyval.dv.nv += 1;
		}
break;
case 139:
#line 1155 "pic.y"
	{ yyval.pair = yyvsp[0].pair; }
break;
case 140:
#line 1157 "pic.y"
	{
		  position pos = yyvsp[0].pl;
		  yyval.pair.x = pos.x;
		  yyval.pair.y = pos.y;
		}
break;
case 141:
#line 1163 "pic.y"
	{
		  position pos = yyvsp[-1].pl;
		  yyval.pair.x = pos.x;
		  yyval.pair.y = pos.y;
		}
break;
case 142:
#line 1172 "pic.y"
	{ yyval.pair = yyvsp[0].pair; }
break;
case 143:
#line 1174 "pic.y"
	{
		  yyval.pair.x = yyvsp[-2].pair.x + yyvsp[0].pair.x;
		  yyval.pair.y = yyvsp[-2].pair.y + yyvsp[0].pair.y;
		}
break;
case 144:
#line 1179 "pic.y"
	{
		  yyval.pair.x = yyvsp[-3].pair.x + yyvsp[-1].pair.x;
		  yyval.pair.y = yyvsp[-3].pair.y + yyvsp[-1].pair.y;
		}
break;
case 145:
#line 1184 "pic.y"
	{
		  yyval.pair.x = yyvsp[-2].pair.x - yyvsp[0].pair.x;
		  yyval.pair.y = yyvsp[-2].pair.y - yyvsp[0].pair.y;
		}
break;
case 146:
#line 1189 "pic.y"
	{
		  yyval.pair.x = yyvsp[-3].pair.x - yyvsp[-1].pair.x;
		  yyval.pair.y = yyvsp[-3].pair.y - yyvsp[-1].pair.y;
		}
break;
case 147:
#line 1194 "pic.y"
	{
		  yyval.pair.x = yyvsp[-3].pair.x;
		  yyval.pair.y = yyvsp[-1].pair.y;
		}
break;
case 148:
#line 1199 "pic.y"
	{
		  yyval.pair.x = (1.0 - yyvsp[-4].x)*yyvsp[-2].pair.x + yyvsp[-4].x*yyvsp[0].pair.x;
		  yyval.pair.y = (1.0 - yyvsp[-4].x)*yyvsp[-2].pair.y + yyvsp[-4].x*yyvsp[0].pair.y;
		}
break;
case 149:
#line 1204 "pic.y"
	{
		  yyval.pair.x = (1.0 - yyvsp[-5].x)*yyvsp[-3].pair.x + yyvsp[-5].x*yyvsp[-1].pair.x;
		  yyval.pair.y = (1.0 - yyvsp[-5].x)*yyvsp[-3].pair.y + yyvsp[-5].x*yyvsp[-1].pair.y;
		}
break;
case 150:
#line 1209 "pic.y"
	{
		  yyval.pair.x = (1.0 - yyvsp[-5].x)*yyvsp[-3].pair.x + yyvsp[-5].x*yyvsp[-1].pair.x;
		  yyval.pair.y = (1.0 - yyvsp[-5].x)*yyvsp[-3].pair.y + yyvsp[-5].x*yyvsp[-1].pair.y;
		}
break;
case 151:
#line 1214 "pic.y"
	{
		  yyval.pair.x = (1.0 - yyvsp[-6].x)*yyvsp[-4].pair.x + yyvsp[-6].x*yyvsp[-2].pair.x;
		  yyval.pair.y = (1.0 - yyvsp[-6].x)*yyvsp[-4].pair.y + yyvsp[-6].x*yyvsp[-2].pair.y;
		}
break;
case 154:
#line 1227 "pic.y"
	{
		  yyval.pair.x = yyvsp[-2].x;
		  yyval.pair.y = yyvsp[0].x;
		}
break;
case 155:
#line 1232 "pic.y"
	{ yyval.pair = yyvsp[-1].pair; }
break;
case 156:
#line 1238 "pic.y"
	{ yyval.pl = yyvsp[0].pl; }
break;
case 157:
#line 1240 "pic.y"
	{
		  path pth(yyvsp[0].crn);
		  if (!pth.follow(yyvsp[-1].pl, & yyval.pl))
		    YYABORT;
		}
break;
case 158:
#line 1246 "pic.y"
	{
		  path pth(yyvsp[-1].crn);
		  if (!pth.follow(yyvsp[0].pl, & yyval.pl))
		    YYABORT;
		}
break;
case 159:
#line 1252 "pic.y"
	{
		  path pth(yyvsp[-2].crn);
		  if (!pth.follow(yyvsp[0].pl, & yyval.pl))
		    YYABORT;
		}
break;
case 160:
#line 1258 "pic.y"
	{
		  yyval.pl.x = current_position.x;
		  yyval.pl.y = current_position.y;
		  yyval.pl.obj = 0;
		}
break;
case 161:
#line 1267 "pic.y"
	{
		  place *p = lookup_label(yyvsp[0].str);
		  if (!p) {
		    lex_error("there is no place `%1'", yyvsp[0].str);
		    YYABORT;
		  }
		  yyval.pl = *p;
		  a_delete yyvsp[0].str;
		}
break;
case 162:
#line 1277 "pic.y"
	{ yyval.pl.obj = yyvsp[0].obj; }
break;
case 163:
#line 1279 "pic.y"
	{
		  path pth(yyvsp[0].str);
		  if (!pth.follow(yyvsp[-2].pl, & yyval.pl))
		    YYABORT;
		}
break;
case 164:
#line 1288 "pic.y"
	{ yyval.n = yyvsp[0].n; }
break;
case 165:
#line 1290 "pic.y"
	{
		  /* XXX Check for overflow (and non-integers?).*/
		  yyval.n = (int)yyvsp[-1].x;
		}
break;
case 166:
#line 1298 "pic.y"
	{ yyval.n = 1; }
break;
case 167:
#line 1300 "pic.y"
	{ yyval.n = yyvsp[-1].n; }
break;
case 168:
#line 1305 "pic.y"
	{
		  int count = 0;
		  object *p;
		  for (p = olist.head; p != 0; p = p->next)
		    if (p->type() == yyvsp[0].obtype && ++count == yyvsp[-1].n) {
		      yyval.obj = p;
		      break;
		    }
		  if (p == 0) {
		    lex_error("there is no %1%2 %3", yyvsp[-1].n, ordinal_postfix(yyvsp[-1].n),
			      object_type_name(yyvsp[0].obtype));
		    YYABORT;
		  }
		}
break;
case 169:
#line 1320 "pic.y"
	{
		  int count = 0;
		  object *p;
		  for (p = olist.tail; p != 0; p = p->prev)
		    if (p->type() == yyvsp[0].obtype && ++count == yyvsp[-1].n) {
		      yyval.obj = p;
		      break;
		    }
		  if (p == 0) {
		    lex_error("there is no %1%2 last %3", yyvsp[-1].n,
			      ordinal_postfix(yyvsp[-1].n), object_type_name(yyvsp[0].obtype));
		    YYABORT;
		  }
		}
break;
case 170:
#line 1338 "pic.y"
	{ yyval.obtype = BOX_OBJECT; }
break;
case 171:
#line 1340 "pic.y"
	{ yyval.obtype = CIRCLE_OBJECT; }
break;
case 172:
#line 1342 "pic.y"
	{ yyval.obtype = ELLIPSE_OBJECT; }
break;
case 173:
#line 1344 "pic.y"
	{ yyval.obtype = ARC_OBJECT; }
break;
case 174:
#line 1346 "pic.y"
	{ yyval.obtype = LINE_OBJECT; }
break;
case 175:
#line 1348 "pic.y"
	{ yyval.obtype = ARROW_OBJECT; }
break;
case 176:
#line 1350 "pic.y"
	{ yyval.obtype = SPLINE_OBJECT; }
break;
case 177:
#line 1352 "pic.y"
	{ yyval.obtype = BLOCK_OBJECT; }
break;
case 178:
#line 1354 "pic.y"
	{ yyval.obtype = TEXT_OBJECT; }
break;
case 179:
#line 1359 "pic.y"
	{ yyval.pth = new path(yyvsp[0].str); }
break;
case 180:
#line 1361 "pic.y"
	{
		  yyval.pth = yyvsp[-2].pth;
		  yyval.pth->append(yyvsp[0].str);
		}
break;
case 181:
#line 1369 "pic.y"
	{ yyval.pth = new path(yyvsp[0].crn); }
break;
case 182:
#line 1373 "pic.y"
	{ yyval.pth = yyvsp[0].pth; }
break;
case 183:
#line 1375 "pic.y"
	{
		  yyval.pth = yyvsp[-1].pth;
		  yyval.pth->append(yyvsp[0].crn);
		}
break;
case 184:
#line 1383 "pic.y"
	{ yyval.pth = yyvsp[0].pth; }
break;
case 185:
#line 1385 "pic.y"
	{
		  yyval.pth = yyvsp[-3].pth;
		  yyval.pth->set_ypath(yyvsp[-1].pth);
		}
break;
case 186:
#line 1391 "pic.y"
	{
		  lex_warning("`%1%2 last %3' in `with' argument ignored",
			      yyvsp[-3].n, ordinal_postfix(yyvsp[-3].n), object_type_name(yyvsp[-1].obtype));
		  yyval.pth = yyvsp[0].pth;
		}
break;
case 187:
#line 1397 "pic.y"
	{
		  lex_warning("`last %1' in `with' argument ignored",
			      object_type_name(yyvsp[-1].obtype));
		  yyval.pth = yyvsp[0].pth;
		}
break;
case 188:
#line 1403 "pic.y"
	{
		  lex_warning("`%1%2 %3' in `with' argument ignored",
			      yyvsp[-2].n, ordinal_postfix(yyvsp[-2].n), object_type_name(yyvsp[-1].obtype));
		  yyval.pth = yyvsp[0].pth;
		}
break;
case 189:
#line 1409 "pic.y"
	{
		  lex_warning("initial `%1' in `with' argument ignored", yyvsp[-1].str);
		  a_delete yyvsp[-1].str;
		  yyval.pth = yyvsp[0].pth;
		}
break;
case 190:
#line 1418 "pic.y"
	{ yyval.crn = &object::north; }
break;
case 191:
#line 1420 "pic.y"
	{ yyval.crn = &object::east; }
break;
case 192:
#line 1422 "pic.y"
	{ yyval.crn = &object::west; }
break;
case 193:
#line 1424 "pic.y"
	{ yyval.crn = &object::south; }
break;
case 194:
#line 1426 "pic.y"
	{ yyval.crn = &object::north_east; }
break;
case 195:
#line 1428 "pic.y"
	{ yyval.crn = &object:: south_east; }
break;
case 196:
#line 1430 "pic.y"
	{ yyval.crn = &object::north_west; }
break;
case 197:
#line 1432 "pic.y"
	{ yyval.crn = &object::south_west; }
break;
case 198:
#line 1434 "pic.y"
	{ yyval.crn = &object::center; }
break;
case 199:
#line 1436 "pic.y"
	{ yyval.crn = &object::start; }
break;
case 200:
#line 1438 "pic.y"
	{ yyval.crn = &object::end; }
break;
case 201:
#line 1440 "pic.y"
	{ yyval.crn = &object::north; }
break;
case 202:
#line 1442 "pic.y"
	{ yyval.crn = &object::south; }
break;
case 203:
#line 1444 "pic.y"
	{ yyval.crn = &object::west; }
break;
case 204:
#line 1446 "pic.y"
	{ yyval.crn = &object::east; }
break;
case 205:
#line 1448 "pic.y"
	{ yyval.crn = &object::north_west; }
break;
case 206:
#line 1450 "pic.y"
	{ yyval.crn = &object::south_west; }
break;
case 207:
#line 1452 "pic.y"
	{ yyval.crn = &object::north_east; }
break;
case 208:
#line 1454 "pic.y"
	{ yyval.crn = &object::south_east; }
break;
case 209:
#line 1456 "pic.y"
	{ yyval.crn = &object::west; }
break;
case 210:
#line 1458 "pic.y"
	{ yyval.crn = &object::east; }
break;
case 211:
#line 1460 "pic.y"
	{ yyval.crn = &object::north_west; }
break;
case 212:
#line 1462 "pic.y"
	{ yyval.crn = &object::south_west; }
break;
case 213:
#line 1464 "pic.y"
	{ yyval.crn = &object::north_east; }
break;
case 214:
#line 1466 "pic.y"
	{ yyval.crn = &object::south_east; }
break;
case 215:
#line 1468 "pic.y"
	{ yyval.crn = &object::north; }
break;
case 216:
#line 1470 "pic.y"
	{ yyval.crn = &object::south; }
break;
case 217:
#line 1472 "pic.y"
	{ yyval.crn = &object::east; }
break;
case 218:
#line 1474 "pic.y"
	{ yyval.crn = &object::west; }
break;
case 219:
#line 1476 "pic.y"
	{ yyval.crn = &object::center; }
break;
case 220:
#line 1478 "pic.y"
	{ yyval.crn = &object::start; }
break;
case 221:
#line 1480 "pic.y"
	{ yyval.crn = &object::end; }
break;
case 222:
#line 1485 "pic.y"
	{
		  if (!lookup_variable(yyvsp[0].str, & yyval.x)) {
		    lex_error("there is no variable `%1'", yyvsp[0].str);
		    YYABORT;
		  }
		  a_delete yyvsp[0].str;
		}
break;
case 223:
#line 1493 "pic.y"
	{ yyval.x = yyvsp[0].x; }
break;
case 224:
#line 1495 "pic.y"
	{
		  if (yyvsp[-1].pl.obj != 0)
		    yyval.x = yyvsp[-1].pl.obj->origin().x;
		  else
		    yyval.x = yyvsp[-1].pl.x;
		}
break;
case 225:
#line 1502 "pic.y"
	{
		  if (yyvsp[-1].pl.obj != 0)
		    yyval.x = yyvsp[-1].pl.obj->origin().y;
		  else
		    yyval.x = yyvsp[-1].pl.y;
		}
break;
case 226:
#line 1509 "pic.y"
	{
		  if (yyvsp[-1].pl.obj != 0)
		    yyval.x = yyvsp[-1].pl.obj->height();
		  else
		    yyval.x = 0.0;
		}
break;
case 227:
#line 1516 "pic.y"
	{
		  if (yyvsp[-1].pl.obj != 0)
		    yyval.x = yyvsp[-1].pl.obj->width();
		  else
		    yyval.x = 0.0;
		}
break;
case 228:
#line 1523 "pic.y"
	{
		  if (yyvsp[-1].pl.obj != 0)
		    yyval.x = yyvsp[-1].pl.obj->radius();
		  else
		    yyval.x = 0.0;
		}
break;
case 229:
#line 1530 "pic.y"
	{ yyval.x = yyvsp[-2].x + yyvsp[0].x; }
break;
case 230:
#line 1532 "pic.y"
	{ yyval.x = yyvsp[-2].x - yyvsp[0].x; }
break;
case 231:
#line 1534 "pic.y"
	{ yyval.x = yyvsp[-2].x * yyvsp[0].x; }
break;
case 232:
#line 1536 "pic.y"
	{
		  if (yyvsp[0].x == 0.0) {
		    lex_error("division by zero");
		    YYABORT;
		  }
		  yyval.x = yyvsp[-2].x/yyvsp[0].x;
		}
break;
case 233:
#line 1544 "pic.y"
	{
		  if (yyvsp[0].x == 0.0) {
		    lex_error("modulus by zero");
		    YYABORT;
		  }
		  yyval.x = fmod(yyvsp[-2].x, yyvsp[0].x);
		}
break;
case 234:
#line 1552 "pic.y"
	{
		  errno = 0;
		  yyval.x = pow(yyvsp[-2].x, yyvsp[0].x);
		  if (errno == EDOM) {
		    lex_error("arguments to `^' operator out of domain");
		    YYABORT;
		  }
		  if (errno == ERANGE) {
		    lex_error("result of `^' operator out of range");
		    YYABORT;
		  }
		}
break;
case 235:
#line 1565 "pic.y"
	{ yyval.x = -yyvsp[0].x; }
break;
case 236:
#line 1567 "pic.y"
	{ yyval.x = yyvsp[-1].x; }
break;
case 237:
#line 1569 "pic.y"
	{
		  errno = 0;
		  yyval.x = sin(yyvsp[-1].x);
		  if (errno == ERANGE) {
		    lex_error("sin result out of range");
		    YYABORT;
		  }
		}
break;
case 238:
#line 1578 "pic.y"
	{
		  errno = 0;
		  yyval.x = cos(yyvsp[-1].x);
		  if (errno == ERANGE) {
		    lex_error("cos result out of range");
		    YYABORT;
		  }
		}
break;
case 239:
#line 1587 "pic.y"
	{
		  errno = 0;
		  yyval.x = atan2(yyvsp[-3].x, yyvsp[-1].x);
		  if (errno == EDOM) {
		    lex_error("atan2 argument out of domain");
		    YYABORT;
		  }
		  if (errno == ERANGE) {
		    lex_error("atan2 result out of range");
		    YYABORT;
		  }
		}
break;
case 240:
#line 1600 "pic.y"
	{
		  errno = 0;
		  yyval.x = log10(yyvsp[-1].x);
		  if (errno == ERANGE) {
		    lex_error("log result out of range");
		    YYABORT;
		  }
		}
break;
case 241:
#line 1609 "pic.y"
	{
		  errno = 0;
		  yyval.x = pow(10.0, yyvsp[-1].x);
		  if (errno == ERANGE) {
		    lex_error("exp result out of range");
		    YYABORT;
		  }
		}
break;
case 242:
#line 1618 "pic.y"
	{
		  errno = 0;
		  yyval.x = sqrt(yyvsp[-1].x);
		  if (errno == EDOM) {
		    lex_error("sqrt argument out of domain");
		    YYABORT;
		  }
		}
break;
case 243:
#line 1627 "pic.y"
	{ yyval.x = yyvsp[-3].x > yyvsp[-1].x ? yyvsp[-3].x : yyvsp[-1].x; }
break;
case 244:
#line 1629 "pic.y"
	{ yyval.x = yyvsp[-3].x < yyvsp[-1].x ? yyvsp[-3].x : yyvsp[-1].x; }
break;
case 245:
#line 1631 "pic.y"
	{ yyval.x = yyvsp[-1].x < 0 ? -floor(-yyvsp[-1].x) : floor(yyvsp[-1].x); }
break;
case 246:
#line 1633 "pic.y"
	{ yyval.x = 1.0 + floor(((rand()&0x7fff)/double(0x7fff))*yyvsp[-1].x); }
break;
case 247:
#line 1635 "pic.y"
	{
		  /* return a random number in the range [0,1) */
		  /* portable, but not very random */
		  yyval.x = (rand() & 0x7fff) / double(0x8000);
		}
break;
case 248:
#line 1641 "pic.y"
	{
		  yyval.x = 0;
		  srand((unsigned int)yyvsp[-1].x);
		}
break;
case 249:
#line 1646 "pic.y"
	{ yyval.x = (yyvsp[-2].x < yyvsp[0].x); }
break;
case 250:
#line 1648 "pic.y"
	{ yyval.x = (yyvsp[-2].x <= yyvsp[0].x); }
break;
case 251:
#line 1650 "pic.y"
	{ yyval.x = (yyvsp[-2].x > yyvsp[0].x); }
break;
case 252:
#line 1652 "pic.y"
	{ yyval.x = (yyvsp[-2].x >= yyvsp[0].x); }
break;
case 253:
#line 1654 "pic.y"
	{ yyval.x = (yyvsp[-2].x == yyvsp[0].x); }
break;
case 254:
#line 1656 "pic.y"
	{ yyval.x = (yyvsp[-2].x != yyvsp[0].x); }
break;
case 255:
#line 1658 "pic.y"
	{ yyval.x = (yyvsp[-2].x != 0.0 && yyvsp[0].x != 0.0); }
break;
case 256:
#line 1660 "pic.y"
	{ yyval.x = (yyvsp[-2].x != 0.0 || yyvsp[0].x != 0.0); }
break;
case 257:
#line 1662 "pic.y"
	{ yyval.x = (yyvsp[0].x == 0.0); }
break;
#line 5865 "pic.cpp"
    }
    yyssp -= yym;
    yystate = *yyssp;
    yyvsp -= yym;
    yym = yylhs[yyn];
    if (yystate == 0 && yym == 0)
    {
#if YYDEBUG
        if (yydebug)
            printf("%sdebug: after reduction, shifting from state 0 to\
 state %d\n", YYPREFIX, YYFINAL);
#endif
        yystate = YYFINAL;
        *++yyssp = YYFINAL;
        *++yyvsp = yyval;
        if (yychar < 0)
        {
            if ((yychar = yylex()) < 0) yychar = 0;
#if YYDEBUG
            if (yydebug)
            {
                yys = 0;
                if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
                if (!yys) yys = "illegal-symbol";
                printf("%sdebug: state %d, reading %d (%s)\n",
                        YYPREFIX, YYFINAL, yychar, yys);
            }
#endif
        }
        if (yychar == 0) goto yyaccept;
        goto yyloop;
    }
    if ((yyn = yygindex[yym]) && (yyn += yystate) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yystate)
        yystate = yytable[yyn];
    else
        yystate = yydgoto[yym];
#if YYDEBUG
    if (yydebug)
        printf("%sdebug: after reduction, shifting from state %d \
to state %d\n", YYPREFIX, *yyssp, yystate);
#endif
    if (yyssp >= yysslim && yygrowstack())
    {
        goto yyoverflow;
    }
    *++yyssp = (short) yystate;
    *++yyvsp = yyval;
    goto yyloop;

yyoverflow:
    yyerror("yacc stack overflow");

yyabort:
    return (1);

yyaccept:
    return (0);
}
